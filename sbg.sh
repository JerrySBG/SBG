# --------------------------------------------------
# ENCRYPTED BY B14CK-KN1GH7 (NAFIS FUAD)
# Github   : http://github.com/nfs-tech-bd
# Facebook : http://facebook.com/nafis.fuad.904
# Telegram : http://t.me/Nafisfuad1
# --------------------------------------------------
NFS=$(mktemp)
base64 -d  >${NFS}<<B14CK-KN1GH7
IyEvYmluL2Jhc2gKIyMjIENvbG9yCkJJQmx1ZT0nXDAzM1sxOzk0bScgICAgICAgIyBCbHVlCkJHQ09MT1I9J1xlWzE7OTc7MTAxbScgICAgIyBXSElURSBSRUQKZXhwb3J0IE5DPSdcMDMzWzBtJwpSRUQ9IlwwMzNbMzFtIgpZRUxMT1c9IlwwMzNbMzNtIgpHUkFZPSJcZVsxOzMwbSIKcHVycGxlPSJcMDMzWzE7OTVtIgpzdWRvIGFwdC1nZXQgaW5zdGFsbCAteSBmaWdsZXQgYm94ZXMKc3VkbyBhcHQtZ2V0IGluc3RhbGwgLXkgcHYKCiMgPT09PT09PT09PT09PT09PT09PQpJVkFSPSIvZXRjL2h0dHAtaW5zdGFzIgpTQ1BUX0RJUj0iL2V0Yy9TQ1JJUFQiCnJtICQocHdkKS8kMAoKb2Z1cygpIHsKICAgIHVuc2V0IHNlcnZlcgogICAgc2VydmVyPSQoZWNobyAke3R4dF9vZnVzY2F0d30gfCBjdXQgLWQnOicgLWYxKQogICAgdW5zZXQgdHh0b2Z1cwogICAgbnVtYmVyPSQoZXhwciBsZW5ndGggJDEpCiAgICBmb3IgKChpID0gMTsgaSA8ICRudW1iZXIgKyAxOyBpKyspKTsgZG8KICAgICAgdHh0WyRpXT0kKGVjaG8gIiQxIiB8IGN1dCAtYiAkaSkKICAgICAgY2FzZSAke3R4dFskaV19IGluCiAgICAgICAgIi4iKSB0eHRbJGldPSJ4IiA7OwogICAgICAgICJ4IikgdHh0WyRpXT0iLiIgOzsKICAgICAgICAiNSIpIHR4dFskaV09InMiIDs7CiAgICAgICAgInMiKSB0eHRbJGldPSI1IiA7OwogICAgICAgICIxIikgdHh0WyRpXT0iQCIgOzsKICAgICAgICAiQCIpIHR4dFskaV09IjEiIDs7CiAgICAgICAgIjIiKSB0eHRbJGldPSI/IiA7OwogICAgICAgICI/IikgdHh0WyRpXT0iMiIgOzsKICAgICAgICAiNCIpIHR4dFskaV09IjAiIDs7CiAgICAgICAgIjAiKSB0eHRbJGldPSI0IiA7OwogICAgICAgICIvIikgdHh0WyRpXT0iSyIgOzsKICAgICAgICAiSyIpIHR4dFskaV09Ii8iIDs7CiAgICAgIGVzYWMKICAgICAgdHh0b2Z1cys9IiR7dHh0WyRpXX0iCiAgICBkb25lCiAgICBlY2hvICIkdHh0b2Z1cyIgfCByZXYKICB9CiAgCiMgLy8gRXhwb3JpbnQgSVAgQWRkcmVzc0luZm9ybWF0aW9uCmV4cG9ydCBJUD0kKCBjdXJsIC1zUyBpcGluZm8uaW8vaXAgKQoKIyAvLyBDbGVhciBEYXRhCmNsZWFyCiMgLy8gRXhwb3JpbnQgSVAgQWRkcmVzc0luZm9ybWF0aW9uCmV4cG9ydCBJUD0kKCBjdXJsIC1zUyBpcGluZm8uaW8vaXAgKQoKY2xlYXIKaWYgWyAtZiAiL2V0Yy94cmF5L2RvbWFpbiIgXTsgdGhlbgplY2hvIC1lICJbICR7eWVsbH1ERVRFQ1RBRE8ke05DfSBdICR7QklCbHVlfVNjcmlwdCB5YSBJbnN0YWxhZG8iCmVjaG8gLW5lICJbICR7cmVkfUFURU5DSU9OJHtOQ30gXSAke0JJQmx1ZX1USUVORVMgUVVFIFJFSU5TVEFMQVIgRUwgUy5PIgpyZWFkIC1uIDEgLXMgLXIgLXAgIlByZXNpb25hIEN1YWxxdWllciBQYXJhIEVtcGV6YXIgQSBJbnN0YWxhciIKZXhpdApmaQplY2hvIC1lICIgICR7QklCbHVlfeKVreKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVriR7TkN9IgplY2hvIC1lICIgICR7QklCbHVlfeKUgiAke0JHQ09MT1J9ICAgICAgQUNUVUFMSVpBTkRPIEJBU0UgREUgREFUT1MhICAgJHtOQ30ke0JJQmx1ZX0g4pSCJHtOQ30iCmVjaG8gLWUgIiAgJHtCSUJsdWV94pWw4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWvJHtOQ30iCmVjaG8gLWUgIiIKc2xlZXAgMgpzeXNjdGwgLXcgbmV0LmlwdjYuY29uZi5hbGwuZGlzYWJsZV9pcHY2PTEgJiYgc3lzY3RsIC13IG5ldC5pcHY2LmNvbmYuZGVmYXVsdC5kaXNhYmxlX2lwdjY9MQpzdWRvIGFwdCAteSAtcSBhdXRvY2xlYW4Kc3VkbyBhcHQgLXkgY2xlYW4Kc3VkbyBhcHQgLXEgdXBkYXRlCnN1ZG8gYXB0IC15IHVwZ3JhZGUKc3VkbyBhcHQgLXkgZnVsbC11cGdyYWRlCnN1ZG8gYXB0IC15IGF1dG9yZW1vdmUgLS1wdXJnZQoKc3VkbyBhcHQgaW5zdGFsbCBuZXRmaWx0ZXItcGVyc2lzdGVudCAteQpzdWRvIGFwdC1nZXQgcmVtb3ZlIC0tcHVyZ2UgdWZ3IGZpcmV3YWxsZCAteQpzdWRvIGFwdCBpbnN0YWxsIC15IGJ6aXAyIGd6aXAgdm5zdGF0IGNvcmV1dGlscyByc3lzbG9nIGlmdG9wIC15CmFwdCBpbnN0YWxsIC15IHNjcmVlbiBjdXJsIGpxIGJ6aXAyIGd6aXAgdm5zdGF0IGNvcmV1dGlscyByc3lzbG9nIGlmdG9wIHppcCB1bnppcCBnaXQgYXB0LXRyYW5zcG9ydC1odHRwcyBidWlsZC1lc3NlbnRpYWwgLXkKIyMgTmV0d29ya2luZyBwYWNrYWdlcwogICAgc3VkbyBhcHQgLXkgaW5zdGFsbCBhcHQtdHJhbnNwb3J0LWh0dHBzCiAgICAjIyBTeXN0ZW0gdXRpbGl0aWVzCiAgICBzdWRvIGFwdCAteSBpbnN0YWxsIGFwdC11dGlscyBidXN5Ym94IGNhLWNlcnRpZmljYXRlcyBjcm9uIGN1cmwgZ251cGcyIGxvY2FsZXMgbHNiLXJlbGVhc2UgbmFubyBwcmVsb2FkIHNjcmVlbiBzb2Z0d2FyZS1wcm9wZXJ0aWVzLWNvbW1vbiB1bnppcCB2aW0gd2dldCB4eGQgemlwCiAgICAjIyBQcm9ncmFtbWluZyBhbmQgZGV2ZWxvcG1lbnQgdG9vbHMKICAgIHN1ZG8gYXB0IC15IGluc3RhbGwgYXV0b2NvbmYgYXV0b21ha2UgYmFzaC1jb21wbGV0aW9uIGJ1aWxkLWVzc2VudGlhbCBnaXQgbGlidG9vbCBtYWtlIHBrZy1jb25maWcgcHl0aG9uMyBweXRob24zLXBpcCBzb2NhdAogICAgIyMgTWlzY2VsbGFuZW91cwogICAgc3VkbyBhcHQgLXkgaW5zdGFsbCBkaWFsb2cgaHRvcCBuZXQtdG9vbHMKICAgIHN1ZG8gYXB0LWdldCBpbnN0YWxsIC15IHB2CiAgICBzdWRvIGFwdCAteSBpbnN0YWxsIHdlYmZzCmNsZWFyCgogICMgLy8gQmFubmVyCmVjaG8gLWUgIiR7QklCbHVlfeKVreKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVriAke0ZPTlR9IgplY2hvIC1lICIgJHtZRUxMT1d9ICAgICBCaWVudmVuaWRvIGFsIEF1dG8tU2NyaXB0IE1PRMK0cyBFRElDSU9OJHtOQ30iCmVjaG8gLWUgIiAke3B1cnBsZX0gRXN0byBDb25maWd1cmFyw6EgUsOhcGlkYW1lbnRlIGVsIFNDUklQVCBlbiBzdSBWUFMke05DfSIKZWNobyAtZSAiICR7R1JBWX0gICAgIEF1dG9yIDogJHtSRUR9SkVSUlnCriAke05DfSggJHtHUkFZfSBIZWNobyBlbiBNZXhpY28gJHtOQ30pJHtOQ30iCmVjaG8gLWUgIiAke1JFRH0gICAgICAgIMKpIERFViBKRVJSWS1TQkcgJHtOQ30oJHtHUkFZfSAyMDI0ICR7TkN9KSR7TkN9IgplY2hvIC1lICIke0JJQmx1ZX3ilbDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDila8gJHtGT05UfSIKZWNobyAiIgpzbGVlcCAwLjIKIyAvLyBDaGVja2luZyBPcyBBcmNoaXRlY3R1cmUKaWYgW1sgJCggdW5hbWUgLW0gfCBhd2sgJ3twcmludCAkMX0nICkgPT0gIng4Nl82NCIgXV07IHRoZW4KICAgIGVjaG8gLWUgIiR7T0t9JHtCSUJsdWV9IFN1IGFycXVpdGVjdHVyYSBlcyBjb21wYXRpYmxlICggJHtXSH0kKCB1bmFtZSAtbSApJHtOQ30gKSIKZWxzZQogICAgZWNobyAtZSAiJHtFUk9SfSBTdSBhcnF1aXRlY3R1cmEgbm8gZXMgY29tcGF0aWJsZSAoICR7WUVMTE9XfSQoIHVuYW1lIC1tICkke05DfSApIgogICAgZXhpdCAxCmZpCiMgLy8gQ2hlY2tpbmcgU3lzdGVtCmlmIFtbICQoIGNhdCAvZXRjL29zLXJlbGVhc2UgfCBncmVwIC13IElEIHwgaGVhZCAtbjEgfCBzZWQgJ3MvPS8vZycgfCBzZWQgJ3MvIi8vZycgfCBzZWQgJ3MvSUQvL2cnICkgPT0gInVidW50dSIgXV07IHRoZW4KICAgIGVjaG8gLWUgIiR7T0t9JHtCSUJsdWV9IFN1IHNpc3RlbWEgT3BlcmF0aXZvIGVzIENvbXBhdGlibGUgKCAke1dIfSQoIGNhdCAvZXRjL29zLXJlbGVhc2UgfCBncmVwIC13IFBSRVRUWV9OQU1FIHwgaGVhZCAtbjEgfCBzZWQgJ3MvPS8vZycgfCBzZWQgJ3MvIi8vZycgfCBzZWQgJ3MvUFJFVFRZX05BTUUvL2cnICkke05DfSApIgplbGlmIFtbICQoIGNhdCAvZXRjL29zLXJlbGVhc2UgfCBncmVwIC13IElEIHwgaGVhZCAtbjEgfCBzZWQgJ3MvPS8vZycgfCBzZWQgJ3MvIi8vZycgfCBzZWQgJ3MvSUQvL2cnICkgPT0gImRlYmlhbiIgXV07IHRoZW4KICAgIGVjaG8gLWUgIiR7T0t9JHtCSUJsdWV9IFN1IHNpc3RlbWEgT3BlcmF0aXZvIGVzIENvbXBhdGlibGUgKCAke1dIfSQoIGNhdCAvZXRjL29zLXJlbGVhc2UgfCBncmVwIC13IFBSRVRUWV9OQU1FIHwgaGVhZCAtbjEgfCBzZWQgJ3MvPS8vZycgfCBzZWQgJ3MvIi8vZycgfCBzZWQgJ3MvUFJFVFRZX05BTUUvL2cnICkke05DfSApIgplbHNlCiAgICBlY2hvIC1lICIke0VST1J9IFN1IFNpc3RlbWEgT3BlcmF0aXZvIE5vIGVzIENvbXBhdGlibGUgKCAke1lFTExPV30kKCBjYXQgL2V0Yy9vcy1yZWxlYXNlIHwgZ3JlcCAtdyBQUkVUVFlfTkFNRSB8IGhlYWQgLW4xIHwgc2VkICdzLz0vL2cnIHwgc2VkICdzLyIvL2cnIHwgc2VkICdzL1BSRVRUWV9OQU1FLy9nJyApJHtOQ30gKSIKICAgIGV4aXQgMQpmaQojTVlJUD0kKGN1cmwgLXNTIGlwaW5mby5pby9pcCkKTVlJUD0kKGN1cmwgLXNTIGlwdjQuaWNhbmhhemlwLmNvbSkKZWNobyAtZSAiJHtPS30ke0JJQmx1ZX0gRGlyZWNjaW9uIERlIElQICR7TkN9KCAke1dIfSRNWUlQJHtOQ30gKSIKZWNobyAiIgpyZWFkIC1wICIkKCBlY2hvIC1lICIke3B1cnBsZX1QcmVzaW9uZSAke0dSQVl9WyAke05DfSR7UkVEfUVudGVyJHtOQ30gJHtHUkFZfV0ke3B1cnBsZX0gUGFyYSBpbmljaWFyIGxhIGluc3RhbGFjacOzbiIpICIKZWNobyAiIgpjbGVhcgppZiBbICIkKHN5c3RlbWQtZGV0ZWN0LXZpcnQpIiA9PSAib3BlbnZ6IiBdOyB0aGVuCiAgICAgICAgZWNobyAiT3BlblZaIG5vIGVzIFNvcG9ydGFkbyIKICAgICAgICBleGl0IDEKZmkKY2xlYXIKIyMjIyMjIElaSU4gU0MgCgp2ZXJ5ZnlfZnVuICgpIHsKW1sgISAtZCAke0lWQVJ9IF1dICYmIHRvdWNoICR7SVZBUn0KW1sgISAtZCAke1NDUFRfRElSfSBdXSAmJiBta2RpciAke1NDUFRfRElSfQp1bnNldCBBUlEKY2FzZSAkMSBpbgoiZ2VyYXIuc2giKUFSUT0iL3Vzci9iaW4vIjs7CiJodHRwLXNlcnZlci5zaCIpQVJRPSIvYmluLyI7OwoqKSBBUlE9IiR7U0NQVF9ESVJ9LyI7Owplc2FjCm12IC1mICRIT01FLyQxICR7QVJRfS8kMQpjaG1vZCAreCAke0FSUX0vJDEKfQoKcmVzcygpIHsKY2xlYXIKcmVzPSQob2Z1cyAiJEtleSIgfCBjdXQgLWQnLycgLWYyKQp3Z2V0IGh0dHA6Ly8xMDcuMTcyLjIxLjIzMTo4ODg5LyR7cmVzfS9tZW51X2NyZWRpdG8KY2xlYXIKcmVzcz0kKGNhdCAvcm9vdC9tZW51X2NyZWRpdG8pCmVjaG8gIiRyZXNzIiA+IC91c3IvYmluL3Byb2ZpbDIKY2xlYXIKfQplY2hvIC1lICIgICR7QklCbHVlfeKVreKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVriR7TkN9IgplY2hvIC1lICIgICR7QklCbHVlfeKUgiAke0JHQ09MT1J9ICAgSU5UUk9EVVpDQSBMQSBDTEFWRSBERSBMQSBMSUNFTkNJQSAgICR7TkN9JHtCSUJsdWV9IOKUgiR7TkN9IgplY2hvIC1lICIgICR7QklCbHVlfeKVsOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVryR7TkN9IgplY2hvICIgIgpyZWFkIC1wICQnIFwwMzNbMDs5Nzs0MW1JTkdSRVNBIFRVIENMQVZFOlwwMzNbMG0gXDAzM1sxOzk3OzM2bScgS2V5CnJlc3MKbWV1X2lwICgpIHsKTUlQPSQoaXAgYWRkciB8IGdyZXAgJ2luZXQnIHwgZ3JlcCAtdiBpbmV0NiB8IGdyZXAgLXZFICcxMjdcLlswLTldezEsM31cLlswLTldezEsM31cLlswLTldezEsM30nIHwgZ3JlcCAtbyAtRSAnWzAtOV17MSwzfVwuWzAtOV17MSwzfVwuWzAtOV17MSwzfVwuWzAtOV17MSwzfScgfCBoZWFkIC0xKQpNSVAyPSQod2dldCAtcU8tIGlwdjQuaWNhbmhhemlwLmNvbSkKW1sgIiRNSVAiICE9ICIkTUlQMiIgXV0gJiYgSVA9IiRNSVAyIiB8fCBJUD0iJE1JUCIKZWNobyAiJElQIiA+IC91c3IvYmluL3ZlbmRvcl9jb2RlCn0KbWV1X2lwCnRleHQ9IiBDT01QSUxBTkRPIENMQVZFIERFIEFDQ0VTTyAiCmNvbG9yPSJcMDMzWzE7MzdtIiAgIyBCbGFuY28KCmZvciAoKGkgPSAwOyBpIDwgJHsjdGV4dH07IGkrKykpOyBkbwogICAgZWNobyAtbiAtZSAiJHtjb2xvcn0ke3RleHQ6JGk6MX0iCiAgICBzbGVlcCAwLjEgICMgQWp1c3RhIGVzdGUgdmFsb3Igc2Vnw7puIHR1IHByZWZlcmVuY2lhIHBhcmEgZWwgcmV0cmFzbyBlbnRyZSBsZXRyYXMKZG9uZQplY2hvIC1lICJcMDMzWzBtIiAgIyBSZXN0YXVyYSBlbCBjb2xvciBwcmVkZXRlcm1pbmFkbyBhbCBmaW5hbApjZCAkSE9NRQp3Z2V0IC1PICIkSE9NRS9saXN0YS1hcnEiICQob2Z1cyAiJEtleSIpLyRJUCA+IC9kZXYvbnVsbCAyPiYxCklQPSQob2Z1cyAiJEtleSIgfCBncmVwIC12RSAnMTI3XC5bMC05XXsxLDN9XC5bMC05XXsxLDN9XC5bMC05XXsxLDN9JyB8IGdyZXAgLW8gLUUgJ1swLTldezEsM31cLlswLTldezEsM31cLlswLTldezEsM31cLlswLTldezEsM30nKQpzbGVlcCAxcwpbWyAtZSAkSE9NRS9saXN0YS1hcnEgXV0gJiYgewpSRVFVRVNUPSQob2Z1cyAiJEtleSIgfGN1dCAtZCcvJyAtZjIpCmZvciBhcnF4IGluIGBjYXQgJEhPTUUvbGlzdGEtYXJxYDsgZG8KZWNobyAtbmUgIlwwMzNbMzg7NTsxNTs0ODs1OzIwOG1DT05FWElPTiBBTCBTRVJWSURPUjogXDAzM1swbSIKd2dldCAtTyAkSE9NRS8kYXJxeCAke0lQfTo4ODg4LyR7UkVRVUVTVH0vJHthcnF4fSA+IC9kZXYvbnVsbCAyPiYxICYmIGVjaG8gLWUgIlwwMzNbMTszMW0tIFwwMzNbMTszMm1FeGl0b3NhICEiIHx8IHsgZWNobyAtZSAiXDAzM1swOzk3OzQxbUZhbGxpZGEgKFNhbGllbmRvKVwwMzNbMG0iIHwgcHYgLXFMIDEwOyBlY2hvIC1lICIgXDAzM1swOzk3OzQ1bS0+IElOVEVOVEEgREUgTlVFVk8sIENPUElBIEJJRU4gTEEgS0VZJHtOQ30iOyBlY2hvIC1lICIgXDAzM1swOzk3OzQ1bS0+IEtFWSBFTElNSU5BREEgbyBVU0FEQSxHZW5lcmEgTnVldmEgS0VZJHtOQ30iOyBlY2hvIC1lICIgXDAzM1swOzk3OzQ1bS0+IFRFTEVHUkFNOiBASmVycnlfU0JHJHtOQ30iOyBybSAtcmYgJEhPTUUvbGlzdGEtYXJxOyBleGl0IDE7IH0KW1sgLWUgJEhPTUUvJGFycXggXV0gJiYgdmVyeWZ5X2Z1biAkYXJxeApkb25lCnJtICRIT01FL2xpc3RhLWFycQp9IHx8IHsKcm0gLXJmIGxpc3RhLWFycQplY2hvIC1lICIgXDAzM1swOzk3OzQxbUVSUk9SIERFIEtFWSEke05DfSIKc2xlZXAgMwplY2hvIC1lICIgXDAzM1swOzk3OzQ1bS0+IElOVEVOVEEgREUgTlVFVk8sIENPUElBIEJJRU4gTEEgS0VZJHtOQ30iCmVjaG8gLWUgIiBcMDMzWzA7OTc7NDVtLT4gS0VZIEVMSU1JTkFEQSBvIFVTQURBLEdlbmVyYSBOdWV2YSBLRVkke05DfSIKZWNobyAtZSAiIFwwMzNbMDs5Nzs0NW0tPiBURUxFR1JBTTogQEplcnJ5X1NCRyR7TkN9Igp9CmNsZWFyCnN1ZG8gbXYgL2V0Yy9TQ1JJUFQgL3Jvb3QKdmVyeT0kKGNhdCAvcm9vdC9TQ1JJUFQvbWVudV9jcmVkaXRvKQplY2hvICIkdmVyeSIgPiAvdXNyL2Jpbi9jcmVkCmNsZWFyCmNoZWNraW5nX3NjKCkgewogIGNvbHM9JCh0cHV0IGNvbHMpCnRleHQ9IiBJTlNUQUxBQ0lPTiBFTiBDVVJTTyAiCnBhZGRpbmc9JCgoKGNvbHMgLSAkeyN0ZXh0fSkgLyA1KSkKICAgIGVjaG8gLWUgIlwwMzNbMTs5M23ilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIBcMDMzWzBtIgogICAgZWNobyAtbmUgIlwwMzNbMzg7NTsxNTs0ODs1OzIwOG0kKHByaW50ZiAiJSpzIiAkcGFkZGluZykke3RleHR9JChwcmludGYgIiUqcyIgJHBhZGRpbmcpXDAzM1swbSIKICAgIGVjaG8gIiAiCiAgICBlY2hvIC1lICJcZVsxOzMzbSBSRVNFTExFUjogJChhd2sgJ3twcmludGYgIiUwc1xuIiwgJDB9JyAvdXNyL2Jpbi9wcm9maWwyKSAke3B1cnBsZX1WRVJJRklDQURPIFxlWzBtIiB8IHB2IC1xTCAxMAogICAgZWNobyAtZSAiXGVbMTszM20gS0VZIFNDUklQOiAkKGF3ayAne3ByaW50ZiAiJTBzXG4iLCAkMH0nIC91c3IvYmluL2NyZWQpICR7cHVycGxlfVZFUklGSUNBRE8gXGVbMG0iIHwgcHYgLXFMIDEwCiAgICBlY2hvIC1lICIgICAgICAgICAgICAgICR7UkVEfVBFUk1JU08gQ09OQ0VESURPJHtOQ30iICAjIEFqdXN0YSBlbCBtZW5zYWplIHNlZ8O6biB0dXMgbmVjZXNpZGFkZXMKICAgIGVjaG8gLWUgIiAgIFwwMzNbMDszM21UdSBpcCBmdWUgYXV0b3JpemFkbyBleGl0b3NhbWVudGUuJHtOQ30iCiAgICBlY2hvIC1lICJcMDMzWzE7OTNt4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSAXDAzM1swbSIKICAgICMgZXhpdAogICMgZmkKICAgcm0gLXJmIC9ldGMvU0NSSVBUCn0KY2hlY2tpbmdfc2MKY2xlYXIgICAgICAgICAgICAgICAKY2QgL3Jvb3QKbG9jYWxpcD0kKGhvc3RuYW1lIC1JIHwgY3V0IC1kXCAgLWYxKQpoc3Q9KCBgaG9zdG5hbWVgICkKZGFydD0kKGNhdCAvZXRjL2hvc3RzIHwgZ3JlcCAtdyBgaG9zdG5hbWVgIHwgYXdrICd7cHJpbnQgJDJ9JykKaWYgW1sgIiRoc3QiICE9ICIkZGFydCIgXV07IHRoZW4KZWNobyAiJGxvY2FsaXAgJChob3N0bmFtZSkiID4+IC9ldGMvaG9zdHMKZmkKc2Vjc190b19odW1hbigpIHsKZWNobyAiVElFTVBPIERFIElOU1RBTEFDSU9OIDogJCgoICR7MX0gLyAzNjAwICkpIGhvcmFzICQoKCAoJHsxfSAvIDYwKSAlIDYwICkpIG1pbnV0b3MgJCgoICR7MX0gJSA2MCApKSBzZWd1bmRvcyIKfQpybSAtcmYgL2V0Yy9ybWJsCm1rZGlyIC1wIC9ldGMvcm1ibApta2RpciAtcCAvZXRjL3JtYmwvdGhlbWUKbWtkaXIgLXAgL3Zhci9saWIvID4vZGV2L251bGwgMj4mMQplY2hvICJJUD0iID4+IC92YXIvbGliL2lwdnBzLmNvbmYKY2xlYXIKCmZ1bmN0aW9uIFNCR0lOU1RBTEwoKXsKZnVuX2JhcigpIHsKICAgIENNRFswXT0iJDEiCiAgICBDTURbMV09IiQyIgogICAgKAogICAgICAgIFtbIC1lICRIT01FL2ZpbSBdXSAmJiBybSAkSE9NRS9maW0KICAgICAgICAke0NNRFswXX0gLXkgPi9kZXYvbnVsbCAyPiYxCiAgICAgICAgJHtDTURbMV19IC15ID4vZGV2L251bGwgMj4mMQogICAgICAgIHRvdWNoICRIT01FL2ZpbQogICAgKSA+L2Rldi9udWxsIDI+JjEgJgogICAgdHB1dCBjaXZpcwogICAgZWNobyAtbmUgIiAgXDAzM1swOzMzbUFjdHVhbGl6YW5kbyBEb21pbmlvLi4gXDAzM1sxOzM3bS0gXDAzM1swOzMzbVsiCiAgICB3aGlsZSB0cnVlOyBkbwogICAgICAgIGZvciAoKGkgPSAwOyBpIDwgMTg7IGkrKykpOyBkbwogICAgICAgICAgICBlY2hvIC1uZSAiXDAzM1swOzMybSMiCiAgICAgICAgICAgIHNsZWVwIDAuMXMKICAgICAgICBkb25lCiAgICAgICAgW1sgLWUgJEhPTUUvZmltIF1dICYmIHJtICRIT01FL2ZpbSAmJiBicmVhawogICAgICAgIGVjaG8gLWUgIlwwMzNbMDszM21dIgogICAgICAgIHNsZWVwIDFzCiAgICAgICAgdHB1dCBjdXUxCiAgICAgICAgdHB1dCBkbDEKICAgICAgICBlY2hvIC1uZSAiICBcMDMzWzA7MzNtQWN0dWFsaXphbmRvIERvbWluaW8uLi4gXDAzM1sxOzM3bS0gXDAzM1swOzMzbVsiCiAgICBkb25lCiAgICBlY2hvIC1lICJcMDMzWzA7MzNtXVwwMzNbMTszN20gLVwwMzNbMTszMm0gQ29uIEV4aXRvICFcMDMzWzE7MzdtIgogICAgdHB1dCBjbm9ybQp9CnJlczEoKSB7CndnZXQgaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL0plcnJ5U0JHL1NCRzIvbWFpbi9kb20vZG9tLnNoICYmIGNobW9kICt4IGRvbS5zaCAmJiAuL2RvbS5zaApjbGVhcgp9CnJlczIoKSB7CndnZXQgaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL0plcnJ5U0JHL1NCRzIvbWFpbi9kb20vZG9tMi5zaCAmJiBjaG1vZCAreCBkb20yLnNoICYmIC4vZG9tMi5zaApjbGVhcgp9CnJlczMoKSB7CndnZXQgaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL0plcnJ5U0JHL1NCRzIvbWFpbi9kb20vZG9tMy5zaCAmJiBjaG1vZCAreCBkb20zLnNoICYmIC4vZG9tMy5zaApjbGVhcgp9CnJlczQoKSB7CndnZXQgaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL0plcnJ5U0JHL1NCRzIvbWFpbi9kb20vZG9tNC5zaCAmJiBjaG1vZCAreCBkb200LnNoICYmIC4vZG9tNC5zaApjbGVhcgp9CnJlczUoKSB7CndnZXQgaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL0plcnJ5U0JHL1NCRzIvbWFpbi9kb20vZG9tNS5zaCAmJiBjaG1vZCAreCBkb201LnNoICYmIC4vZG9tNS5zaApjbGVhcgp9CnJlczYoKSB7CndnZXQgaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL0plcnJ5U0JHL1NCRzIvbWFpbi9kb20vZG9tNi5zaCAmJiBjaG1vZCAreCBkb202LnNoICYmIC4vZG9tNi5zaApjbGVhcgp9CmNsZWFyCmVjaG8gLWUgIiAke0JMVUV94pWt4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWuJHtOQ30iCmVjaG8gLWUgIiAke0JMVUV94pSCICR7QkdDT0xPUn0gICAgSU5HUkVTQSBVTiBVU1VBUklPIFBBUkEgVFUgU0NSSVBUICAgJHtOQ30ke0JMVUV9IOKUgiR7TkN9IgplY2hvIC1lICIgJHtCTFVFfeKVsOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVryR7TkN9IgplY2hvICIgIgp1bnRpbCBbWyAkYXV0aG9yID1+IF5bYS16QS1aMC05Xy4tXSskIF1dOyBkbwpyZWFkIC1ycCAiSW50cm9kdWNlIHR1IG5vbWJyZSBhcXXDrSBzaW4gZXNwYWNpb3MgOiAiIC1lIGF1dGhvcgpkb25lCmVjaG8gIiRhdXRob3IiID4gL2V0Yy9wcm9maWwKYXV0aG9yPSQoY2F0IC9ldGMvcHJvZmlsKQpjbGVhcgplY2hvIC1lICIke0JJQmx1ZX3ila3ilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDila4ke05DfSIKZWNobyAtZSAiJHtCSUJsdWV94pSCICAgICBcMDMzWzE7MzdtU2VsZWNjaW9uZSBPcGNpb24gcGFyYSBDb25maWd1cmFyIERvbWluaW8gICAgICR7QklCbHVlfeKUgiR7TkN9IgplY2hvIC1lICIke0JJQmx1ZX3ilbDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDila8ke05DfSIKZWNobyAtZSAiJHtCSUJsdWV94pWt4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWuJHtOQ30iCmVjaG8gLWUgIiR7QklCbHVlfeKUgiAgWyAxIF0gIFwwMzNbMTszN21UdSBwcm9waW8gRG9taW5pbyAgICAgICR7TkN9IgplY2hvIC1lICIke0JJQmx1ZX3ilIIgIFsgMiBdICBcMDMzWzE7MzdtRG9taW5pbyBxdWUgdGllbmUgZWwgU2NyaXB0ICAke05DfSIKI2VjaG8gLWUgIiR7QklCbHVlfeKUgiAgWyAzIF0gIFwwMzNbMTszN21UdSBwcm9waW8gRG9taW5pbyB5IHR1IFByb3BpbyBEb21pbmlvIFNsb3dETlMgICAgJHtOQ30iCmVjaG8gLWUgIiR7QklCbHVlfeKVsOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVryR7TkN9Igp1bnRpbCBbWyAkZG9tYWluID1+IF5bMS0yXSskIF1dOyBkbyAKcmVhZCAtcCAiICAgUG9yIGZhdm9yIHNlbGVjY2lvbmUgbG9zIG7Dum1lcm9zIDEgbyAyIDogIiBkb21haW4KZG9uZQppZiBbWyAkZG9tYWluID09ICIxIiBdXTsgdGhlbgpjbGVhciAKZWNobyAtZSAiJHtCSUJsdWV94pWt4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWuJHtOQ30iCmVjaG8gLWUgIiR7QklCbHVlfeKUgiAgICAgICAgICAgIFwwMzNbMTszN21ET01JTklPIE8gU1VCRE9NSU5JTyAgICAgICAgICAke0JJQmx1ZX3ilIIke05DfSIKZWNobyAtZSAiJHtCSUJsdWV94pWw4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWvJHtOQ30iCmVjaG8gLWUgICIke0JJQmx1ZX3ila3ilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDila4ke05DfSIKZWNobyAtZSAgIiR7QklCbHVlfeKUgiAgICAgICAgICAgICAgIFwwMzNbMTszN21HUkFDSUFTIFBPUiAgICAgICAgICAgICAgICAke0JJQmx1ZX3ilIIke05DfSIKZWNobyAtZSAgIiR7QklCbHVlfeKUgiAgICAgICAgXDAzM1sxOzM3bVVTQVIgTUkgQVVUT1NDUklQVCBQUkVNSVVNICAgICAgICAke0JJQmx1ZX3ilIIke05DfSIKZWNobyAtZSAgIiR7QklCbHVlfeKUgiAgICAgICAgICAgICAgICBcMDMzWzE7MzdtQlkgSkVSUlkgMjAyNCAgICAgICAgICAgICAke0JJQmx1ZX3ilIIke05DfSIKZWNobyAtZSAgIiR7QklCbHVlfeKVsOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVryR7TkN9IgplY2hvICIgIgp1bnRpbCBbWyAkZG5zcyA9fiBeW2EtekEtWjAtOV8uLV0rJCBdXTsgZG8gCnJlYWQgLXJwICJJbnRyb2R1Y2UgdHUgU3ViL0RvbWluaW8gYXF1w60gOiAiIC1lIGRuc3MKZG9uZQpybSAtcmYgL2V0Yy94cmF5CnJtIC1yZiAvZXRjL25zZG9tYWluCnJtIC1yZiAvZXRjL3Blcgpta2RpciAtcCAvZXRjL3hyYXkKbWtkaXIgLXAgL2V0Yy9uc2RvbWFpbgp0b3VjaCAvZXRjL3hyYXkvZG9tYWluCmVjaG8gIiRkbnNzIiA+IC9yb290L2RvbWFpbgplY2hvICIkZG5zcyIgPiAvcm9vdC9zY2RvbWFpbgplY2hvICIkZG5zcyIgPiAvZXRjL3hyYXkvc2Nkb21haW4KZWNobyAiJGRuc3MiID4gL2V0Yy94cmF5L2RvbWFpbgplY2hvICJJUD0kZG5zcyIgPiAvdmFyL2xpYi9pcHZwcy5jb25mCmVjaG8gIiIKY2xlYXIKZWxpZiAgW1sgJGRvbWFpbiA9PSAiMiIgXV07IHRoZW4KY2xlYXIKZWNobyAtZSAiJHtCSUJsdWV94pWt4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWuJHtOQ30iCmVjaG8gLWUgIiR7QklCbHVlfeKUgiBcMDMzWzE7MzdtU2VsZWNjaW9uZSBPcGNpb24gcGFyYSBDb25maWd1cmFyIERvbWluaW8ke0JJQmx1ZX3ilIIke05DfSIKZWNobyAtZSAiJHtCSUJsdWV94pWw4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWvJHtOQ30iCmVjaG8gLWUgIiR7QklCbHVlfeKVreKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVriR7TkN9IgplY2hvIC1lICIke0JJQmx1ZX3ilIIgIFsgMSBdICBcMDMzWzE7MzdtRG9taW5pbyB4eHgudGVwbGxvdnBuLmV1Lm9yZyAgICAgICAgICAke05DfSIgIAplY2hvIC1lICIke0JJQmx1ZX3ilIIgIFsgMiBdICBcMDMzWzE7MzdtRG9taW5pbyB4eHguYmVydXJhdC5jbG91ZCAgICAgICAgICAgICAgICAke05DfSIgIAplY2hvIC1lICIke0JJQmx1ZX3ilIIgIFsgMyBdICBcMDMzWzE7MzdtRG9taW5pbyB4eHgueG54eG1zLmNsb3VkICAgICAgICAgICAgICAgJHtOQ30iICAKZWNobyAtZSAiJHtCSUJsdWV94pSCICBbIDQgXSAgXDAzM1sxOzM3bURvbWluaW8geHh4LnZ2cG5zdG9yZS5teS5pZCAgICAgICAgICAgICAgICR7TkN9IiAgCmVjaG8gLWUgIiR7QklCbHVlfeKUgiAgWyA1IF0gIFwwMzNbMTszN21Eb21pbmlvIHh4eC55b2d6dnBuLmNsb3VkICAgICAgICAgICAgICAke05DfSIgIAojZWNobyAtZSAiJHtCSUJsdWV94pSCICBbIDYgXSAgXDAzM1sxOzM3bURvbWluaW8geHh4LmplcnJ5c2JnLmNvbSAgICAgICAgICAgICAgJHtOQ30iICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAplY2hvIC1lICIke0JJQmx1ZX3ilbDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDila8ke05DfSIKdW50aWwgW1sgJGRvbWFpbjIgPX4gXlsxLTVdKyQgXV07IGRvIApyZWFkIC1wICIgICBQb3IgZmF2b3Igc2VsZWNjaW9uZSBsb3MgbsO6bWVyb3MgMSBhbCA1IDogIiBkb21haW4yCmRvbmUKZWxpZiBbWyAkZG9tYWluMiA9PSAiMSIgXV07IHRoZW4KY2xlYXIKZWNobyAtZSAgIiR7QklCbHVlfeKVreKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVriR7TkN9IgplY2hvIC1lICAiJHtCSUJsdWV94pSCICBcMDMzWzE7MzdtRWplbXBsbyBkZSBzdWJkb21pbmlvIHh4eC50ZXBsbG92cG4uZXUub3JnICAgJHtCSUJsdWV94pSCJHtOQ30iCmVjaG8gLWUgICIke0JJQmx1ZX3ilIIgICAgXDAzM1sxOzM3bXh4eCBFbnRvbmNlcyB0dSBTdWJkb21pbmlvICAgICAgICAgICAgJHtCSUJsdWV94pSCJHtOQ30iCmVjaG8gLWUgICIke0JJQmx1ZX3ilbDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDila8ke05DfSIKZWNobyAiICIKdW50aWwgW1sgJGRuMSA9fiBeW2EtekEtWjAtOV8uLV0rJCBdXTsgZG8KcmVhZCAtcnAgIkluZ3Jlc2EgdHUgU3ViZG9taW5pbyBhcXXDrSBzaW4gRXNwYWNpb3MgOiAiIC1lIGRuMQpkb25lCnJtIC1yZiAvZXRjL3hyYXkKcm0gLXJmIC9ldGMvbnNkb21haW4Kcm0gLXJmIC9ldGMvcGVyCm1rZGlyIC1wIC9ldGMveHJheQpta2RpciAtcCAvZXRjL25zZG9tYWluCm1rZGlyIC1wIC9ldGMvcGVyCnRvdWNoIC9ldGMvcGVyL2lkCnRvdWNoIC9ldGMvcGVyL3Rva2VuCnRvdWNoIC9ldGMveHJheS9kb21haW4KZWNobyAiJGRuMSIgPiAvcm9vdC9zdWJkb21haW54CmNkCnNsZWVwIDEKZnVuX2JhciAncmVzMScKY2xlYXIKcm0gL3Jvb3Qvc3ViZG9tYWlueApmaQppZiBbWyAkZG9tYWluMiA9PSAiMiIgXV07IHRoZW4KY2xlYXIKZWNobyAtZSAgIiR7QklCbHVlfeKVreKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVriR7TkN9IgplY2hvIC1lICAiJHtCSUJsdWV94pSCICBcMDMzWzE7MzdtRWplbXBsbyBkZSBzdWJkb21pbmlvIHh4eC5iZXJ1cmF0LmNsb3VkICAgICAgICAgJHtCSUJsdWV94pSCJHtOQ30iCmVjaG8gLWUgICIke0JJQmx1ZX3ilIIgICAgXDAzM1sxOzM3bXh4eCBFbnRvbmNlcyB0dSBTdWJkb21pbmlvICAgICAgICAgICAgJHtCSUJsdWV94pSCJHtOQ30iCmVjaG8gLWUgICIke0JJQmx1ZX3ilbDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDila8ke05DfSIKZWNobyAiICIKdW50aWwgW1sgJGRuMiA9fiBeW2EtekEtWjAtOV8uLV0rJCBdXTsgZG8KcmVhZCAtcnAgIkluZ3Jlc2EgdHUgU3ViZG9taW5pbyBhcXXDrSBzaW4gRXNwYWNpb3MgOiAiIC1lIGRuMgpkb25lCnJtIC1yZiAvZXRjL3hyYXkKcm0gLXJmIC9ldGMvbnNkb21haW4Kcm0gLXJmIC9ldGMvcGVyCm1rZGlyIC1wIC9ldGMveHJheQpta2RpciAtcCAvZXRjL25zZG9tYWluCm1rZGlyIC1wIC9ldGMvcGVyCnRvdWNoIC9ldGMvcGVyL2lkCnRvdWNoIC9ldGMvcGVyL3Rva2VuCnRvdWNoIC9ldGMveHJheS9kb21haW4KZWNobyAiJGRuMiIgPiAvcm9vdC9zdWJkb21haW54CmNkCnNsZWVwIDEKZnVuX2JhciAncmVzMicKY2xlYXIKcm0gL3Jvb3Qvc3ViZG9tYWlueApmaQppZiBbWyAkZG9tYWluMiA9PSAiMyIgXV07IHRoZW4KY2xlYXIKZWNobyAtZSAgIiR7QklCbHVlfeKVreKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVriR7TkN9IgplY2hvIC1lICAiJHtCSUJsdWV94pSCICBcMDMzWzE7MzdtRWplbXBsbyBkZSBzdWJkb21pbmlvIHh4eC54bnh4bXMuY2xvdWQgICAgICAgICR7QklCbHVlfeKUgiR7TkN9IgplY2hvIC1lICAiJHtCSUJsdWV94pSCICAgIFwwMzNbMTszN214eHggRW50b25jZXMgdHUgU3ViZG9taW5pbyAgICAgICAgICAgICR7QklCbHVlfeKUgiR7TkN9IgplY2hvIC1lICAiJHtCSUJsdWV94pWw4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWvJHtOQ30iCmVjaG8gIiAiCnVudGlsIFtbICRkbjMgPX4gXlthLXpBLVowLTlfLi1dKyQgXV07IGRvCnJlYWQgLXJwICJJbmdyZXNhIHR1IFN1YmRvbWluaW8gYXF1w60gc2luIEVzcGFjaW9zIDogIiAtZSBkbjMKZG9uZQpybSAtcmYgL2V0Yy94cmF5CnJtIC1yZiAvZXRjL25zZG9tYWluCnJtIC1yZiAvZXRjL3Blcgpta2RpciAtcCAvZXRjL3hyYXkKbWtkaXIgLXAgL2V0Yy9uc2RvbWFpbgpta2RpciAtcCAvZXRjL3Blcgp0b3VjaCAvZXRjL3Blci9pZAp0b3VjaCAvZXRjL3Blci90b2tlbgp0b3VjaCAvZXRjL3hyYXkvZG9tYWluCmVjaG8gIiRkbjMiID4gL3Jvb3Qvc3ViZG9tYWlueApjZApzbGVlcCAxCmZ1bl9iYXIgJ3JlczMnCmNsZWFyCnJtIC9yb290L3N1YmRvbWFpbngKZmkKaWYgW1sgJGRvbWFpbjIgPT0gIjQiIF1dOyB0aGVuCmNsZWFyCmVjaG8gLWUgICIke0JJQmx1ZX3ila3ilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDila4ke05DfSIKZWNobyAtZSAgIiR7QklCbHVlfeKUgiAgXDAzM1sxOzM3bUVqZW1wbG8gZGUgc3ViZG9taW5pbyB4eHgudnZwbnN0b3JlLm15LmlkICAgICAgICAke0JJQmx1ZX3ilIIke05DfSIKZWNobyAtZSAgIiR7QklCbHVlfeKUgiAgICBcMDMzWzE7MzdteHh4IEVudG9uY2VzIHR1IFN1YmRvbWluaW8gICAgICAgICAgICAke0JJQmx1ZX3ilIIke05DfSIKZWNobyAtZSAgIiR7QklCbHVlfeKVsOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVryR7TkN9IgplY2hvICIgIgp1bnRpbCBbWyAkZG40ID1+IF5bYS16QS1aMC05Xy4tXSskIF1dOyBkbwpyZWFkIC1ycCAiSW5ncmVzYSB0dSBTdWJkb21pbmlvIGFxdcOtIHNpbiBFc3BhY2lvcyA6ICIgLWUgZG40CmRvbmUKcm0gLXJmIC9ldGMveHJheQpybSAtcmYgL2V0Yy9uc2RvbWFpbgpybSAtcmYgL2V0Yy9wZXIKbWtkaXIgLXAgL2V0Yy94cmF5Cm1rZGlyIC1wIC9ldGMvbnNkb21haW4KbWtkaXIgLXAgL2V0Yy9wZXIKdG91Y2ggL2V0Yy9wZXIvaWQKdG91Y2ggL2V0Yy9wZXIvdG9rZW4KdG91Y2ggL2V0Yy94cmF5L2RvbWFpbgplY2hvICIkZG40IiA+IC9yb290L3N1YmRvbWFpbngKY2QKc2xlZXAgMQpmdW5fYmFyICdyZXM0JwpjbGVhcgpybSAvcm9vdC9zdWJkb21haW54CmZpCmlmIFtbICRkb21haW4yID09ICI1IiBdXTsgdGhlbgpjbGVhcgplY2hvIC1lICAiJHtCSUJsdWV94pWt4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWuJHtOQ30iCmVjaG8gLWUgICIke0JJQmx1ZX3ilIIgIFwwMzNbMTszN21FamVtcGxvIGRlIHN1YmRvbWluaW8geHh4LnlvZ3p2cG4uY2xvdWQgICAgICAgICR7QklCbHVlfeKUgiR7TkN9IgplY2hvIC1lICAiJHtCSUJsdWV94pSCICAgIFwwMzNbMTszN214eHggRW50b25jZXMgdHUgU3ViZG9taW5pbyAgICAgICAgICAgICR7QklCbHVlfeKUgiR7TkN9IgplY2hvIC1lICAiJHtCSUJsdWV94pWw4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWvJHtOQ30iCmVjaG8gIiAiCnVudGlsIFtbICRkbjUgPX4gXlthLXpBLVowLTlfLi1dKyQgXV07IGRvCnJlYWQgLXJwICJJbmdyZXNhIHR1IFN1YmRvbWluaW8gYXF1w60gc2luIEVzcGFjaW9zIDogIiAtZSBkbjUKZG9uZQpybSAtcmYgL2V0Yy94cmF5CnJtIC1yZiAvZXRjL25zZG9tYWluCnJtIC1yZiAvZXRjL3Blcgpta2RpciAtcCAvZXRjL3hyYXkKbWtkaXIgLXAgL2V0Yy9uc2RvbWFpbgpta2RpciAtcCAvZXRjL3Blcgp0b3VjaCAvZXRjL3Blci9pZAp0b3VjaCAvZXRjL3Blci90b2tlbgp0b3VjaCAvZXRjL3hyYXkvZG9tYWluCmVjaG8gIiRkbjUiID4gL3Jvb3Qvc3ViZG9tYWlueApjZApzbGVlcCAxCmZ1bl9iYXIgJ3JlczUnCmNsZWFyCnJtIC9yb290L3N1YmRvbWFpbngKZmkKaWYgW1sgJGRvbWFpbjIgPT0gIjYiIF1dOyB0aGVuCmNsZWFyCmVjaG8gLWUgICIke0JJQmx1ZX3ila3ilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDila4ke05DfSIKZWNobyAtZSAgIiR7QklCbHVlfeKUgiAgXDAzM1sxOzM3bUVqZW1wbG8gZGUgc3ViZG9taW5pbyB4eHguamVycnlzYmcuY29tICAgICAgICR7QklCbHVlfeKUgiR7TkN9IgplY2hvIC1lICAiJHtCSUJsdWV94pSCICAgIFwwMzNbMTszN214eHggRW50b25jZXMgdHUgU3ViZG9taW5pbyAgICAgICAgICAgICR7QklCbHVlfeKUgiR7TkN9IgplY2hvIC1lICAiJHtCSUJsdWV94pWw4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWvJHtOQ30iCmVjaG8gIiAiCnVudGlsIFtbICRkbjYgPX4gXlthLXpBLVowLTlfLi1dKyQgXV07IGRvCnJlYWQgLXJwICJJbmdyZXNhIHR1IFN1YmRvbWluaW8gYXF1w60gc2luIEVzcGFjaW9zIDogIiAtZSBkbjYKZG9uZQpybSAtcmYgL2V0Yy94cmF5CnJtIC1yZiAvZXRjL25zZG9tYWluCnJtIC1yZiAvZXRjL3Blcgpta2RpciAtcCAvZXRjL3hyYXkKbWtkaXIgLXAgL2V0Yy9uc2RvbWFpbgpta2RpciAtcCAvZXRjL3Blcgp0b3VjaCAvZXRjL3Blci9pZAp0b3VjaCAvZXRjL3Blci90b2tlbgp0b3VjaCAvZXRjL3hyYXkvZG9tYWluCmVjaG8gIiRkbjYiID4gL3Jvb3Qvc3ViZG9tYWlueApjZApzbGVlcCAxCmZ1bl9iYXIgJ3JlczYnCmZpCmNsZWFyICAKI2VjaG8gLWUgIiRCSUJsdWXila3ilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDila4ke05DfSIKI2VjaG8gLWUgIiRCSUJsdWXilIIkTkMgICAgICAgICBcMDMzWzE7MzdtQ29uZmlndXJhciBEb21pbmlvIFNsb3dETlMgICAgICAgICRCSUJsdWXilIIke05DfSIgIAojZWNobyAtZSAiJEJJQmx1ZeKVsOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVryR7TkN9IgojZWNobyAtZSAiJEJJQmx1ZeKVreKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVriR7TkN9IiAKI2VjaG8gLWUgIiRCSUJsdWXilIIgIFwwMzNbMTszN21FU0NPR0UgVU5BIE9QQ0lPTiBQQVJBIE1PRElGSUNBUiBTTE9XRE5TICAgICAke05DfSIgIAojZWNobyAtZSAiJEJJQmx1ZeKUgiAgWyAxIF0gIFwwMzNbMTszN21Qcm9waW8gRG9taW5pbyBTbG93RE5TIFlhIENvbiB0dSBJUCBWUFMgICAke05DfSIgIAojZWNobyAtZSAiJEJJQmx1ZeKUgiAgWyAxIF0gIFwwMzNbMTszN21Eb21pbmlvIEFsZXRvcmlvIEJ5IEpFUlJZLVNCRyAgICAgICAgICAgICAke05DfSIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAojZWNobyAtZSAiJEJJQmx1ZeKVsOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVryR7TkN9IgojZWNobyAiIgojcmVhZCAtcCAiICAgUG9yIEZhdm9yIFNlbGVjY2lvbmEgMSBvIEVOVEVSIHBhcmEgQ29udGludWFyIDogIiBzbG93CiNjbGVhcgojaWYgW1sgJHNsb3cgPT0gIjEiIF1dOyB0aGVuCiNybSAtcmYgL2V0Yy94cmF5L2RucwojY2xlYXIKI2VjaG8gLWUgIiRCSUJsdWXila3ilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDila4ke05DfSIKI2VjaG8gLWUgIiRCSUJsdWXilIIkTkMgICAgICAgICAgICAgICBcMDMzWzE7MzdtRE9NSU5JTyBTTE9XRE5TICAgICAgICAgICAgICRCSUJsdWXilIIke05DfSIgIAojZWNobyAtZSAiJEJJQmx1ZeKVsOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVryR7TkN9IgojZWNobyAtZSAiJEJJQmx1ZeKVreKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVriR7TkN9IgojZWNobyAtZSAiJEJJQmx1ZeKUgiROQyAgXDAzM1sxOzM3bURlYmVzIGRlIHRlbmVyIFlhIENvbmZpZ3VyYWRvIHR1IERvbWluaW8gJEJJQmx1ZeKUgiR7TkN9IiAgCiNlY2hvIC1lICIkQklCbHVl4pWw4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWvJHtOQ30iCiNyZWFkIC1ycCAiSW50cm9kdWNlIFR1IERvbWluaW8gTlMgOiAiIC1lIHN1YgojU1VCX0RPTUFJTj0ke3N1Yn0KI05TX0RPTUFJTj0ke1NVQl9ET01BSU59CiNlY2hvICROU19ET01BSU4gPiAvZXRjL3hyYXkvZG5zCiNjbGVhcgojZmkKI21rZGlyIC1wIC9ldGMveHJheS9kbnMKI2NsZWFyCn0KY2F0IDw8RU9GPj4gL2V0Yy9ybWJsL3RoZW1lL2dyZWVuCkJHIDogXEVbNDA7MTs0Mm0KVEVYVCA6IFwwMzNbMTszMm0KRU9GCmNhdCA8PEVPRj4+IC9ldGMvcm1ibC90aGVtZS95ZWxsb3cKQkcgOiBcRVs0MDsxOzQzbQpURVhUIDogXDAzM1sxOzMzbQpFT0YKY2F0IDw8RU9GPj4gL2V0Yy9ybWJsL3RoZW1lL3JlZApCRyA6IFxFWzQwOzE7NDFtClRFWFQgOiBcMDMzWzE7MzFtCkVPRgpjYXQgPDxFT0Y+PiAvZXRjL3JtYmwvdGhlbWUvYmx1ZQpCRyA6IFxFWzQwOzE7NDRtClRFWFQgOiBcMDMzWzE7MzRtCkVPRgpjYXQgPDxFT0Y+PiAvZXRjL3JtYmwvdGhlbWUvbWFnZW50YQpCRyA6IFxFWzQwOzE7NDVtClRFWFQgOiBcMDMzWzE7MzVtCkVPRgpjYXQgPDxFT0Y+PiAvZXRjL3JtYmwvdGhlbWUvY3lhbgpCRyA6IFxFWzQwOzE7NDZtClRFWFQgOiBcMDMzWzE7MzZtCkVPRgpjYXQgPDxFT0Y+PiAvZXRjL3JtYmwvdGhlbWUvbGlnaHRncmF5CkJHIDogXEVbNDA7MTs0N20KVEVYVCA6IFwwMzNbMTszN20KRU9GCmNhdCA8PEVPRj4+IC9ldGMvcm1ibC90aGVtZS9kYXJrZ3JheQpCRyA6IFxFWzQwOzE7MTAwbQpURVhUIDogXDAzM1sxOzkwbQpFT0YKY2F0IDw8RU9GPj4gL2V0Yy9ybWJsL3RoZW1lL2xpZ2h0cmVkCkJHIDogXEVbNDA7MTsxMDFtClRFWFQgOiBcMDMzWzE7OTFtCkVPRgpjYXQgPDxFT0Y+PiAvZXRjL3JtYmwvdGhlbWUvbGlnaHRncmVlbgpCRyA6IFxFWzQwOzE7MTAybQpURVhUIDogXDAzM1sxOzkybQpFT0YKY2F0IDw8RU9GPj4gL2V0Yy9ybWJsL3RoZW1lL2xpZ2h0eWVsbG93CkJHIDogXEVbNDA7MTsxMDNtClRFWFQgOiBcMDMzWzE7OTNtCkVPRgpjYXQgPDxFT0Y+PiAvZXRjL3JtYmwvdGhlbWUvbGlnaHRibHVlCkJHIDogXEVbNDA7MTsxMDRtClRFWFQgOiBcMDMzWzE7OTRtCkVPRgpjYXQgPDxFT0Y+PiAvZXRjL3JtYmwvdGhlbWUvbGlnaHRtYWdlbnRhCkJHIDogXEVbNDA7MTsxMDVtClRFWFQgOiBcMDMzWzE7OTVtCkVPRgpjYXQgPDxFT0Y+PiAvZXRjL3JtYmwvdGhlbWUvbGlnaHRjeWFuCkJHIDogXEVbNDA7MTsxMDZtClRFWFQgOiBcMDMzWzE7OTZtCkVPRgpjYXQgPDxFT0Y+PiAvZXRjL3JtYmwvdGhlbWUvY29sb3IuY29uZgpsaWdodGN5YW4KRU9GCmZ1bmN0aW9uIFNCR0lOU1RBTEwyKCl7CmNkCnN5c2N0bCAtdyBuZXQuaXB2Ni5jb25mLmFsbC5kaXNhYmxlX2lwdjY9MSA+L2Rldi9udWxsIDI+JjEKY2xlYXIKd2dldCBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vSmVycnlTQkcvU0JHMi9tYWluL3Rvb2xzLnNoICY+IC9kZXYvbnVsbApjaG1vZCAreCB0b29scy5zaCAKYmFzaCB0b29scy5zaApjbGVhcgpzdGFydD0kKGRhdGUgKyVzKQpsbiAtZnMgL3Vzci9zaGFyZS96b25laW5mby9BbWVyaWNhL01leGljb19DaXR5IC9ldGMvbG9jYWx0aW1lCmFwdCBpbnN0YWxsIHB5dGhvbjIgLXkgPi9kZXYvbnVsbCAyPiYxCn0KZnVuY3Rpb24gU0JHSU5TVEFMTDMoKXsKZnVuX2JhcigpIHsKICAgIENNRFswXT0iJDEiCiAgICBDTURbMV09IiQyIgogICAgKAogICAgICAgIFtbIC1lICRIT01FL2ZpbSBdXSAmJiBybSAkSE9NRS9maW0KICAgICAgICAke0NNRFswXX0gLXkgPi9kZXYvbnVsbCAyPiYxCiAgICAgICAgJHtDTURbMV19IC15ID4vZGV2L251bGwgMj4mMQogICAgICAgIHRvdWNoICRIT01FL2ZpbQogICAgKSA+L2Rldi9udWxsIDI+JjEgJgogICAgdHB1dCBjaXZpcwogICAgZWNobyAtbmUgIiAgXDAzM1swOzMzbUlOU1RBTEFORE8gQVJDSElWT1MgTkVDRVNBUklPUyBcMDMzWzE7MzdtLSBcMDMzWzA7MzNtWyIKICAgIHdoaWxlIHRydWU7IGRvCiAgICAgICAgZm9yICgoaSA9IDA7IGkgPCAxODsgaSsrKSk7IGRvCiAgICAgICAgICAgIGVjaG8gLW5lICJcMDMzWzA7MzJtIyIKICAgICAgICAgICAgc2xlZXAgMC4xcwogICAgICAgIGRvbmUKICAgICAgICBbWyAtZSAkSE9NRS9maW0gXV0gJiYgcm0gJEhPTUUvZmltICYmIGJyZWFrCiAgICAgICAgZWNobyAtZSAiXDAzM1swOzMzbV0iCiAgICAgICAgc2xlZXAgMXMKICAgICAgICB0cHV0IGN1dTEKICAgICAgICB0cHV0IGRsMQogICAgICAgIGVjaG8gLW5lICIgIFwwMzNbMDszM21JTlNUQUxBTkRPIEFSQ0hJVk9TIE5FQ0VTQVJJT1MgXDAzM1sxOzM3bS0gXDAzM1swOzMzbVsiCiAgICBkb25lCiAgICBlY2hvIC1lICJcMDMzWzA7MzNtXVwwMzNbMTszN20gLVwwMzNbMTszMm0gRVhJVE9TTyAhXDAzM1sxOzM3bSIKICAgIHRwdXQgY25vcm0KfQpyZXMyKCkgewp3Z2V0IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9KZXJyeVNCRy9TQkcyL21haW4vaW5zdGFsbC9zc2gtdnBuLnNoICYmIGNobW9kICt4IHNzaC12cG4uc2ggJiYgLi9zc2gtdnBuLnNoCmNsZWFyCn0KcmVzMygpIHsKd2dldCBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vSmVycnlTQkcvU0JHMi9tYWluL2luc3RhbGwvaW5zLXhyYXkuc2ggJiYgY2htb2QgK3ggaW5zLXhyYXkuc2ggJiYgLi9pbnMteHJheS5zaApjbGVhcgp9CnJlczQoKSB7CndnZXQgaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL0plcnJ5U0JHL1NCRzIvbWFpbi9zc2h3cy9pbnNzaHdzLnNoICYmIGNobW9kICt4IGluc3Nod3Muc2ggJiYgLi9pbnNzaHdzLnNoCmNsZWFyCn0KcmVzNSgpIHsKd2dldCBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vSmVycnlTQkcvU0JHMi9tYWluL2luc3RhbGwvc2V0LWJyLnNoICYmIGNobW9kICt4IHNldC1ici5zaCAmJiAuL3NldC1ici5zaApjbGVhcgp9CnJlczYoKSB7CndnZXQgaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL0plcnJ5U0JHL1NCRzIvbWFpbi9tZW51L21lbnUuemlwCnVuemlwIG1lbnUuemlwCmNobW9kICt4IG1lbnUvKgptdiBtZW51LyogL3Vzci9sb2NhbC9zYmluCnJtIC1yZiBtZW51CnJtIC1yZiBtZW51LnppcApjbGVhcgp9CnJlczcoKSB7CmlmIFsgLWQgJy9ldGMveHJheS9kbnMnIF07IHRoZW4KY2xlYXIKd2dldCBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vSmVycnlTQkcvU0JHL21haW4vc2xvd2Rucy9pbnN0YWxsc2wyLnNoICYmIGNobW9kICt4IGluc3RhbGxzbDIuc2ggJiYgYmFzaCBpbnN0YWxsc2wyLnNoCmVsc2UKY2xlYXIKI25hbWVzZXJ2ZXI9JChjYXQgL2V0Yy94cmF5L2RucykKI3JtIC1yZiAvZXRjL3Nsb3dkbnMKI21rZGlyIC1tIDc3NyAvZXRjL3Nsb3dkbnMKI3dnZXQgLXEgLU8gL2V0Yy9zbG93ZG5zL3NlcnZlci5rZXkgImh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9KZXJyeVNCRy9TQkcvbWFpbi9zbG93ZG5zL3NlcnZlci5rZXkiCiN3Z2V0IC1xIC1PIC9ldGMvc2xvd2Rucy9zZXJ2ZXIucHViICJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vSmVycnlTQkcvU0JHL21haW4vc2xvd2Rucy9zZXJ2ZXIucHViIgojd2dldCAtcSAtTyAvZXRjL3Nsb3dkbnMvZG5zdHQtc2VydmVyICJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vSmVycnlTQkcvU0JHL21haW4vc2xvd2Rucy9kbnN0dC1zZXJ2ZXIiCiN3Z2V0IC1xIC1PIC9ldGMvc2xvd2Rucy9kbnN0dC1jbGllbnQgImh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9KZXJyeVNCRy9TQkcvbWFpbi9zbG93ZG5zL2Ruc3R0LWNsaWVudCIKI2NobW9kICt4IC9ldGMvc2xvd2Rucy9zZXJ2ZXIua2V5CiNjaG1vZCAreCAvZXRjL3Nsb3dkbnMvc2VydmVyLnB1YgojY2htb2QgK3ggL2V0Yy9zbG93ZG5zL2Ruc3R0LXNlcnZlcgojY2htb2QgK3ggL2V0Yy9zbG93ZG5zL2Ruc3R0LWNsaWVudAojY2QKI2NhdCA+IC9ldGMvc3lzdGVtZC9zeXN0ZW0vY2xpZW50LnNlcnZpY2UgPDwgRU5ECiNbVW5pdF0KI0Rlc2NyaXB0aW9uPUNsaWVudCBTbG93RE5TIEJ5IEBKZXJyeV9TQkcKI0RvY3VtZW50YXRpb249aHR0cHM6Ly9oaWRlc3NoLmNvbQojQWZ0ZXI9bmV0d29yay50YXJnZXQgbnNzLWxvb2t1cC50YXJnZXQKCiNbU2VydmljZV0KI1R5cGU9c2ltcGxlCiNVc2VyPXJvb3QKI0NhcGFiaWxpdHlCb3VuZGluZ1NldD1DQVBfTkVUX0FETUlOIENBUF9ORVRfQklORF9TRVJWSUNFCiNBbWJpZW50Q2FwYWJpbGl0aWVzPUNBUF9ORVRfQURNSU4gQ0FQX05FVF9CSU5EX1NFUlZJQ0UKI05vTmV3UHJpdmlsZWdlcz10cnVlCiNFeGVjU3RhcnQ9L2V0Yy9zbG93ZG5zL2Ruc3R0LWNsaWVudCAtdWRwIDguOC44Ljg6NTMgLS1wdWJrZXktZmlsZSAvZXRjL3Nsb3dkbnMvc2VydmVyLnB1YiAkbmFtZXNlcnZlciAxMjcuMC4wLjE6MjIyMgojUmVzdGFydD1vbi1mYWlsdXJlCgojW0luc3RhbGxdCiNXYW50ZWRCeT1tdWx0aS11c2VyLnRhcmdldAojRU5ECgojY2QKI2NhdCA+IC9ldGMvc3lzdGVtZC9zeXN0ZW0vc2VydmVyLnNlcnZpY2UgPDwgRU5ECiNbVW5pdF0KI0Rlc2NyaXB0aW9uPVNlcnZlciBTbG93RE5TIEJ5IEBKZXJyeV9TQkcKI0RvY3VtZW50YXRpb249aHR0cHM6Ly9oaWRlc3NoLmNvbQojQWZ0ZXI9bmV0d29yay50YXJnZXQgbnNzLWxvb2t1cC50YXJnZXQKCiNbU2VydmljZV0KI1R5cGU9c2ltcGxlCiNVc2VyPXJvb3QKI0NhcGFiaWxpdHlCb3VuZGluZ1NldD1DQVBfTkVUX0FETUlOIENBUF9ORVRfQklORF9TRVJWSUNFCiNBbWJpZW50Q2FwYWJpbGl0aWVzPUNBUF9ORVRfQURNSU4gQ0FQX05FVF9CSU5EX1NFUlZJQ0UKI05vTmV3UHJpdmlsZWdlcz10cnVlCiNFeGVjU3RhcnQ9L2V0Yy9zbG93ZG5zL2Ruc3R0LXNlcnZlciAtdWRwIDo1MzAwIC1wcml2a2V5LWZpbGUgL2V0Yy9zbG93ZG5zL3NlcnZlci5rZXkgJG5hbWVzZXJ2ZXIgMTI3LjAuMC4xOjExMAojUmVzdGFydD1vbi1mYWlsdXJlCgojW0luc3RhbGxdCiNXYW50ZWRCeT1tdWx0aS11c2VyLnRhcmdldAojRU5ECgojY2QKI2NobW9kICt4IC9ldGMvc3lzdGVtZC9zeXN0ZW0vY2xpZW50LnNlcnZpY2UKI2NobW9kICt4IC9ldGMvc3lzdGVtZC9zeXN0ZW0vc2VydmVyLnNlcnZpY2UKI3BraWxsIGRuc3R0LXNlcnZlcgojcGtpbGwgZG5zdHQtY2xpZW50CiNjbGVhcgojZWNobyAiXDAzM1swOzMxbSBHZW5lcmFuZG8gbnVldmEgY2xhdmUiCiNjZCAvZXRjL3Nsb3dkbnMKI3JtIC1yZiBzZXJ2ZXIua2V5IHNlcnZlci5wdWIKIy4vZG5zdHQtc2VydmVyIC1nZW4ta2V5IC1wcml2a2V5LWZpbGUgc2VydmVyLmtleSAtcHVia2V5LWZpbGUgc2VydmVyLnB1YgojZWNobyAtZSAiXDAzM1swOzMxbSBGSU5BTElaQU5ETy4uLiIKIy4vc3RhcnRkbnMKI2NsZWFyCiNzeXN0ZW1jdGwgZGFlbW9uLXJlbG9hZAojc3lzdGVtY3RsIHN0b3AgY2xpZW50CiNzeXN0ZW1jdGwgc3RvcCBzZXJ2ZXIKI3N5c3RlbWN0bCBlbmFibGUgY2xpZW50CiNzeXN0ZW1jdGwgZW5hYmxlIHNlcnZlcgojc3lzdGVtY3RsIHN0YXJ0IGNsaWVudAojc3lzdGVtY3RsIHN0YXJ0IHNlcnZlcgojc3lzdGVtY3RsIHJlc3RhcnQgY2xpZW50CiNzeXN0ZW1jdGwgcmVzdGFydCBzZXJ2ZXIKI2NsZWFyCmZpCn0KcmVzOCgpIHsKI3dnZXQgaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL0plcnJ5U0JHL1NCRzIvbWFpbi9pbnN0YWxsL3VkcC1jdXN0b20uc2ggJiYgY2htb2QgK3ggdWRwLWN1c3RvbS5zaCAmJiBiYXNoIHVkcC1jdXN0b20uc2gKd2dldCBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vSmVycnlTQkcvU0JHL21haW4vdWRwL3VkcC1jdXN0b20uc2ggJiYgY2htb2QgK3ggdWRwLWN1c3RvbS5zaCAmJiBiYXNoIHVkcC1jdXN0b20uc2gKY2xlYXIKfQpyZXM5KCkgewp3Z2V0IGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9KZXJyeVNCRy9TQkcyL21haW4vYmluL2xpbWl0LnNoICYmIGNobW9kICt4IGxpbWl0LnNoICYmIC4vbGltaXQuc2gKY2xlYXIKfQpyZXMxMCgpIHsKd2dldCBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vSmVycnlTQkcvU0JHMi9tYWluL2luc3RhbGwvaW5zLXRyZ28uc2ggJiYgY2htb2QgK3ggaW5zLXRyZ28uc2ggJiYgYmFzaCAuL2lucy10cmdvLnNoCmNsZWFyCn0KCmVjaG8gLWUgIiR7QklCbHVlfeKVreKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVriR7TkN9IgplY2hvIC1lICIke0JJQmx1ZX3ilIIgJHtCR0NPTE9SfSAgUFJPQ0VTQU5ETyBBIElOU1RBTEFSIFNTSCAmIE9WVlBOICAgICAke05DfSR7QklCbHVlfSDilIIke05DfSIKZWNobyAtZSAiJHtCSUJsdWV94pWw4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWvJHtOQ30iCmZ1bl9iYXIgJ3JlczInCgplY2hvIC1lICIke0JJQmx1ZX3ila3ilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDila4ke05DfSIKZWNobyAtZSAiJHtCSUJsdWV94pSCICR7QkdDT0xPUn0gICAgICAgUFJPQ0VTQU5ETyBBIElOU1RBTEFSIFhSQVkgICAgICAgJHtOQ30ke0JJQmx1ZX0g4pSCJHtOQ30iCmVjaG8gLWUgIiR7QklCbHVlfeKVsOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVryR7TkN9IgpmdW5fYmFyICdyZXMzJwoKZWNobyAtZSAiJHtCSUJsdWV94pWt4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWuJHtOQ30iCmVjaG8gLWUgIiR7QklCbHVlfeKUgiAke0JHQ09MT1J9ICAgICBQUk9DRVNBTkRPIEEgSU5TVEFMQVIgV0VCU09DS0VUIFNTSCR7TkN9JHtCSUJsdWV9IOKUgiR7TkN9IgplY2hvIC1lICIke0JJQmx1ZX3ilbDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDila8ke05DfSIKZnVuX2JhciAncmVzNCcKCmVjaG8gLWUgIiR7QklCbHVlfeKVreKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVriR7TkN9IgplY2hvIC1lICIke0JJQmx1ZX3ilIIgJHtCR0NPTE9SfSAgICAgUFJPQ0VTQU5ETyBBIElOU1RBTEFSIEJBQ0tVUCBNRU5VICAke05DfSR7QklCbHVlfSDilIIke05DfSIKZWNobyAtZSAiJHtCSUJsdWV94pWw4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWvJHtOQ30iCmZ1bl9iYXIgJ3JlczUnCgplY2hvIC1lICIke0JJQmx1ZX3ila3ilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDila4ke05DfSIKZWNobyAtZSAiJHtCSUJsdWV94pSCICR7QkdDT0xPUn0gICAgICAgICBERVNDQVJHQU5ETyBFWFRSQSBNRU5VICAgICAgICAgJHtOQ30ke0JJQmx1ZX0g4pSCJHtOQ30iCmVjaG8gLWUgIiR7QklCbHVlfeKVsOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVryR7TkN9IgpmdW5fYmFyICdyZXM2JwoKI2VjaG8gLWUgIiR7QklCbHVlfeKVreKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVriR7TkN9IgojZWNobyAtZSAiJHtCSUJsdWV94pSCICR7QkdDT0xPUn0gICAgICAgICBERVNDQVJHQU5ETyBTTE9XIEROUyAgICAgICAgICAgJHtOQ30ke0JJQmx1ZX0g4pSCJHtOQ30iCiNlY2hvIC1lICIke0JJQmx1ZX3ilbDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDila8ke05DfSIKI2Z1bl9iYXIgJ3JlczcnCgplY2hvIC1lICIke0JJQmx1ZX3ila3ilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDila4ke05DfSIKZWNobyAtZSAiJHtCSUJsdWV94pSCICR7QkdDT0xPUn0gICAgICAgICBERVNDQVJHQU5ETyBVRFAgQ09TVFVNICAgICAgICAgJHtOQ30ke0JJQmx1ZX0g4pSCJHtOQ30iCmVjaG8gLWUgIiR7QklCbHVlfeKVsOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVryR7TkN9IgpmdW5fYmFyICdyZXM4JwoKZWNobyAtZSAiJHtCSUJsdWV94pWt4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWuJHtOQ30iCmVjaG8gLWUgIiR7QklCbHVlfeKUgiAke0JHQ09MT1J9ICAgIFBST0NFU0FORE8gQSBJTlNUQUxBUiBMSU1JVCBYUkFZICAgICR7TkN9JHtCSUJsdWV9IOKUgiR7TkN9IgplY2hvIC1lICIke0JJQmx1ZX3ilbDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDila8ke05DfSIKZnVuX2JhciAncmVzOScKCiNlY2hvIC1lICIke0JJQmx1ZX3ila3ilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDila4ke05DfSIKI2VjaG8gLWUgIiR7QklCbHVlfeKUgiAke0JHQ09MT1J9ICAgIFBST0NFU0FORE8gQSBJTlNUQUxBUiBUUk9KQU4tR08gICAgICR7TkN9JHtCSUJsdWV9IOKUgiR7TkN9IgojZWNobyAtZSAiJHtCSUJsdWV94pWw4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWvJHtOQ30iCiNmdW5fYmFyICdyZXMxMCcKCn0KCmZ1bmN0aW9uIGlpbmZvKCl7CmRvbWFpbj0kKGNhdCAvZXRjL3hyYXkvZG9tYWluKQpUSU1FUz0iMTAiCkNIQVRJRD0iODMzODIxOTMzIgpLRVk9IjUzNDA3MTEwMTU6QUFFZ0MzSkNyUVoyZmtGcWZWNDBVeXFMZnl6TW1YWDlCWkkiClVSTD0iaHR0cHM6Ly9hcGkudGVsZWdyYW0ub3JnL2JvdCRLRVkvc2VuZE1lc3NhZ2UiCkNJVFk9JChjdXJsIC1zIGlwaW5mby5pby9jaXR5KQplY2hvICRDSVRZID4gL2V0Yy94cmF5L2NpdHkKUEFJUz0kKGN1cmwgaWZjb25maWcuY28vY291bnRyeSkKZWNobyAkUEFJUyA+IC9ldGMveHJheS9wYWlzCklTUD0kKGN1cmwgLXNTIGlmY29uZmlnLmNvL2Fzbi1vcmcpCmVjaG8gJElTUCA+IC9ldGMveHJheS9pc3AKc0ROUz0kKGNhdCAvZXRjL3hyYXkvZG5zKQphdXRob3I9JChjYXQgL2V0Yy9wcm9maWwpCnJlc3NlbD0kKGNhdCAvdXNyL2Jpbi9TQ1JJUFQvbWVudV9jcmVkaXRvKQplY2hvICIkcmVzc2VsIiA+IC91c3IvYmluL3Byb2ZpbDIKVElNRT0kKGRhdGUgKyclZC0lbS0lWSAlSTolTScpClJBTU1TPSQoZnJlZSAtbSB8IGF3ayAnTlI9PTIge3ByaW50ICQyfScpCk1PREVMMj0kKGNhdCAvZXRjL29zLXJlbGVhc2UgfCBncmVwIC13IFBSRVRUWV9OQU1FIHwgaGVhZCAtbjEgfCBzZWQgJ3MvPS8vZycgfCBzZWQgJ3MvIi8vZycgfCBzZWQgJ3MvUFJFVFRZX05BTUUvL2cnKQpNWUlQPSQoY3VybCAtc1MgaXB2NC5pY2FuaGF6aXAuY29tKQpkMT0kKGRhdGUgLWQgIiRJWklOIiArJXMpCmQyPSQoZGF0ZSAtZCAiJHRvZGF5IiArJXMpCkVYUD0kKCggKGQxIC0gZDIpIC8gODY0MDAgKSkKVEVYVD0iCjxjb2RlPuKXh+KUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKXhzwvY29kZT4K8J+Su/CfhoLwn4Wy8J+GgfCfhbjwn4W/8J+GgyDwn4W58J+FtPCfhoHwn4aB8J+GiHzwn4aC8J+FsfCfhbYg8J+Suwo8Y29kZT7il4filIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHil4c8L2NvZGU+Cjxjb2RlPvCdmL7wnZmN8J2ZgPCdmLzwnZi/8J2ZiiAgICA6IDwvY29kZT48Y29kZT4ke1RJTUV9IEhPUkE8L2NvZGU+Cjxjb2RlPvCdmL/wnZmk8J2ZovCdmZ7wnZmj8J2ZnvCdmaQgICAgOiA8L2NvZGU+PGNvZGU+JHtkb21haW59PC9jb2RlPgo8Y29kZT7wnZCS8J2QpfCdkKjwnZCw8J2Qg/CdkI3wnZCSICAgIDogPC9jb2RlPjxjb2RlPiR7c0ROU308L2NvZGU+Cjxjb2RlPvCdmYTwnZmLIPCdmZHwnZmL8J2ZjiAgICAgOiA8L2NvZGU+PGNvZGU+JHtNWUlQfTwvY29kZT4KPGNvZGU+8J2YvvCdmYrwnZmI8J2Zi/CdmLzDkfCdmYTwnZi8ICA6IDwvY29kZT48Y29kZT4ke0lTUH08L2NvZGU+Cjxjb2RlPvCdmZDwnZi98J2ZhPCdmL7wnZi88J2YvvCdmYTwnZmK8J2ZiSAgOiA8L2NvZGU+PGNvZGU+JENJVFksICRQQUlTPC9jb2RlPgo8Y29kZT7wnZmK8J2ZjiDwnZmR8J2Zi/CdmY4gICAgIDogPC9jb2RlPjxjb2RlPiR7TU9ERUwyfTwvY29kZT4KPGNvZGU+8J2ZjfCdmZbwnZmiICAgICAgICA6IDwvY29kZT48Y29kZT4ke1JBTU1TfSBNQjwvY29kZT4KPGNvZGU+8J+boe+4jyDwnZmQ8J2ZjvCdmZDwnZi88J2ZjfCdmYTwnZmKIPCfm6HvuI86PC9jb2RlPiA8Y29kZT4kYXV0aG9yPC9jb2RlPgo8Y29kZT7wn5uh77iPIPCdmY3wnZmA8J2ZjvCdmYDwnZmH8J2Zh/CdmYDwnZmNIPCfm6HvuI8gOjwvY29kZT4gPGNvZGU+JHJlc3NlbDwvY29kZT4KPGNvZGU+4peH4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4peHPC9jb2RlPgo8aT4g4bSA4bSc4bSb4bSP6pyx4bSEyoDJquG0mOG0myDJqsm06pyx4bSb4bSAyp/htIDhtIXhtI8g4bSE4bSPyoDKgOG0h+G0hOG0m+G0gOG0jeG0h8m04bSb4bSHLi4uPC9pPgoiJyZyZXBseV9tYXJrdXA9eyJpbmxpbmVfa2V5Ym9hcmQiOltbeyJ0ZXh0Ijoi8J+UpSDwnZmS8J2ZnfCdmZbwnZmp8J2ZqPCdmZbwnZml8J2ZpSDwnZmK8J2Zm/CdmZ7wnZmY8J2ZnvCdmZbwnZmhIPCflKUiLCJ1cmwiOiJodHRwczovL3dhLm1lLys1MjkyNDEyOTMzMTAifSx7InRleHQiOiLwn5SlIPCdmY/wnZma8J2ZofCdmZrwnZmc8J2Zp/CdmZbwnZmiIPCdmYrwnZmb8J2ZnvCdmZjwnZme8J2ZlvCdmaEg8J+UpSIsInVybCI6Imh0dHBzOi8vdC5tZS9KZXJyeV9TQkcifV1dfScKY3VybCAtcyAtLW1heC10aW1lICRUSU1FUyAtZCAiY2hhdF9pZD0kQ0hBVElEJmRpc2FibGVfd2ViX3BhZ2VfcHJldmlldz0xJnRleHQ9JFRFWFQmcGFyc2VfbW9kZT1odG1sIiAkVVJMID4vZGV2L251bGwKY2xlYXIKfQpTQkdJTlNUQUxMClNCR0lOU1RBTEwzCmNhdD4gL3Jvb3QvLnByb2ZpbGUgPDwgRU5ECmlmIFsgIiRCQVNIIiBdOyB0aGVuCmlmIFsgLWYgfi8uYmFzaHJjIF07IHRoZW4KLiB+Ly5iYXNocmMKZmkKZmkKbWVzZyBuIHx8IHRydWUKbWVudQpFTkQKY2htb2QgNjQ0IC9yb290Ly5wcm9maWxlCmlmIFsgLWYgIi9yb290L2xvZy1pbnN0YWxsLnR4dCIgXTsgdGhlbgpybSAvcm9vdC9sb2ctaW5zdGFsbC50eHQgPiAvZGV2L251bGwgMj4mMQpmaQpoaXN0b3J5IC1jCmNkCnJtIC1yZiAvcm9vdC9zYmcuc2ggPi9kZXYvbnVsbCAyPiYxCnJtIC1yZiAvcm9vdC9zbGhvc3Quc2ggPi9kZXYvbnVsbCAyPiYxCnJtIC1yZiAvcm9vdC9zc2gtdnBuLnNoID4vZGV2L251bGwgMj4mMQpybSAtcmYgL3Jvb3QvaW5zLXhyYXkuc2ggPi9kZXYvbnVsbCAyPiYxCnJtIC1yZiAvcm9vdC9pbnMtdHJnby5zaCA+L2Rldi9udWxsIDI+JjEKcm0gLXJmIC9yb290L2luc3Nod3Muc2ggPi9kZXYvbnVsbCAyPiYxCnJtIC1yZiAvcm9vdC9zZXQtYnIuc2ggPi9kZXYvbnVsbCAyPiYxCnJtIC1yZiAvcm9vdC9saW1pdC5zaCA+L2Rldi9udWxsIDI+JjEKcm0gLXJmIC9yb290L3Rvb2xzLnNoID4vZGV2L251bGwgMj4mMQpybSAtcmYgL3Jvb3QvdXBkYXRlLnNoID4vZGV2L251bGwgMj4mMQpybSAtcmYgL3Jvb3QvaW5zdGFsbHNsLnNoID4vZGV2L251bGwgMj4mMQpybSAtcmYgL3Jvb3Qvc2xvd2Rucy5zaCA+L2Rldi9udWxsIDI+JjEKcm0gLXJmIC9yb290L3VkcC1jdXN0b20uc2ggPi9kZXYvbnVsbCAyPiYxCnJtIC1yZiAvcm9vdC9sb2xjYXQtbWFzdGVyCnNlcnZlclY9JCggY3VybCAtc1MgaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL0plcnJ5U0JHL1NCRy9tYWluL3ZlcnNpKQplY2hvICRzZXJ2ZXJWID4gL29wdC8udmVyCmlpbmZvCgp0aW1lZGF0ZWN0bCBzZXQtdGltZXpvbmUgQW1lcmljYS9NZXhpY29fQ2l0eQpudHBkYXRlIG14LnBvb2wubnRwLm9yZwpjbGVhcgpzZWNzX3RvX2h1bWFuICIkKCgkKGRhdGUgKyVzKSAtICR7c3RhcnR9KSkiCmVjaG8gLWUgIiR7QklCbHVlfeKVreKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVriR7TkN9IgplY2hvICIiCmVjaG8gIiAgID4+PiBTZXJ2aWNlICYgUG9ydCIgIHwgdGVlIC1hIGxvZy1pbnN0YWxsLnR4dAplY2hvICIgICAtIFNsb3dETlMgICAgICAgICAgIDogVG9kb3MgbG9zIFB1ZXJ0b3MiIHwgdGVlIC1hIGxvZy1pbnN0YWxsLnR4dAplY2hvICIgICAtIE9wZW5TU0ggICAgICAgICAgIDogMjIiICB8IHRlZSAtYSBsb2ctaW5zdGFsbC50eHQKZWNobyAiICAgLSBTU0ggV2Vic29ja2V0ICAgICA6IDgwLDgwMDgsODA4MCwgODA5MCwgODI4MCIgfCB0ZWUgLWEgbG9nLWluc3RhbGwudHh0CmVjaG8gIiAgIC0gU1NIIFNTTCBXZWJzb2NrZXQgOiA0NDMsIDg0NDMiIHwgdGVlIC1hIGxvZy1pbnN0YWxsLnR4dAplY2hvICIgICAtIFN0dW5uZWw0ICAgICAgICAgIDogNDQzIiB8IHRlZSAtYSBsb2ctaW5zdGFsbC50eHQKZWNobyAiICAgLSBEcm9wYmVhciAgICAgICAgICA6IDEwOSwgMTEwLCAxNDMiIHwgdGVlIC1hIGxvZy1pbnN0YWxsLnR4dAplY2hvICIgICAtIEJhZHZwbiAgICAgICAgICAgIDogNzEwMC03MzAwIiB8IHRlZSAtYSBsb2ctaW5zdGFsbC50eHQKZWNobyAiICAgLSBOZ2lueCAgICAgICAgICAgICA6IDgxIiB8IHRlZSAtYSBsb2ctaW5zdGFsbC50eHQKZWNobyAiICAgLSBWbWVzcyBUTFMgICAgICAgICA6IDQ0MywgODQ0MyIgfCB0ZWUgLWEgbG9nLWluc3RhbGwudHh0CmVjaG8gIiAgIC0gVm1lc3MgTm9uZSBUTFMgICAgOiA4MCIgfCB0ZWUgLWEgbG9nLWluc3RhbGwudHh0CmVjaG8gIiAgIC0gVmxlc3MgVExTICAgICAgICAgOiA0NDMsIDg0NDMiIHwgdGVlIC1hIGxvZy1pbnN0YWxsLnR4dAplY2hvICIgICAtIFZsZXNzIE5vbmUgVExTICAgIDogODAiIHwgdGVlIC1hIGxvZy1pbnN0YWxsLnR4dAplY2hvICIgICAtIFRyb2phbiBHUlBDICAgICAgIDogNDQzLCA4NDQzIiB8IHRlZSAtYSBsb2ctaW5zdGFsbC50eHQKZWNobyAiICAgLSBUcm9qYW4gV1MgICAgICAgICA6IDQ0MywgODQ0MyIgfCB0ZWUgLWEgbG9nLWluc3RhbGwudHh0CmVjaG8gIiAgIC0gVHJvamFuIEdvICAgICAgICAgOiA0NDMsIDg0NDMiIHwgdGVlIC1hIGxvZy1pbnN0YWxsLnR4dAojZWNobyAiICAgLSBVRFAgQ3VzdG9tICAgICAgICA6IDEtNjU1MzUiIHwgdGVlIC1hIGxvZy1pbnN0YWxsLnR4dAplY2hvICIgICAtIFVEUCBaSVZQTiAgICAgICAgIDogMS0xOTk5OSIgfCB0ZWUgLWEgbG9nLWluc3RhbGwudHh0CmVjaG8gIiAgIC0gVURQIEh5c3RlcmlhICAgICAgOiAyMDAwMC0zOTk5OSIgfCB0ZWUgLWEgbG9nLWluc3RhbGwudHh0CmVjaG8gIiAgIC0gVURQIEN1c3RvbSAgICAgICAgOiA0MDAwMC02NTUzNSIgfCB0ZWUgLWEgbG9nLWluc3RhbGwudHh0CmVjaG8gIiIgIHwgdGVlIC1hIGxvZy1pbnN0YWxsLnR4dAplY2hvICIgICA+Pj4gSW5mb3JtYWNpb24gZGVsIFNlcnZpZG9yICYgT3RyYXMgQ29uZmlndXJhY2lvbmVzIiAgfCB0ZWUgLWEgbG9nLWluc3RhbGwudHh0CmVjaG8gIiAgIC0gWm9uYSBIb3JhcmlhICAgICAgOiBNZXhpY28gKFVUQyAtNikiICB8IHRlZSAtYSBsb2ctaW5zdGFsbC50eHQKZWNobyAiICAgLSBGYWlsMkJhbiAgICAgICAgICA6IFtPTl0iICB8IHRlZSAtYSBsb2ctaW5zdGFsbC50eHQKZWNobyAiICAgLSBJUHRhYmxlcyAgICAgICAgICA6IFtPTl0iICB8IHRlZSAtYSBsb2ctaW5zdGFsbC50eHQKZWNobyAiICAgLSBBdXRvLVJlaW5pY2lvICAgICA6IFtPTl0iICB8IHRlZSAtYSBsb2ctaW5zdGFsbC50eHQKZWNobyAiICAgLSBJUHY2ICAgICAgICAgICAgICA6IFtPRkZdIiAgfCB0ZWUgLWEgbG9nLWluc3RhbGwudHh0CmVjaG8gIiAgIC0gQXV0b3JlYm9vdCBPbiAgICAgOiAxMjowMCAkZ2cgVVRDIC02IiB8IHRlZSAtYSBsb2ctaW5zdGFsbC50eHQKZWNobyAiICAgLSBBdXRvS2lsbCBNdWx0aSBMb2dpbiBVc2VyIiB8IHRlZSAtYSBsb2ctaW5zdGFsbC50eHQKZWNobyAiICAgLSBBdXRvIEJvcnJhZG8gQ3VlbnRhcyBFeHBpcmFkYXMgKDE4OjAwIEhvcmEgTUVYSUNPKSIgfCB0ZWUgLWEgbG9nLWluc3RhbGwudHh0CmVjaG8gIiAgIC0gQXV0byBCYWNrdXAgZGUgVlBTICgxMTo1OSBQTSkiIHwgdGVlIC1hIGxvZy1pbnN0YWxsLnR4dAplY2hvICIgICAtIFZQUyBPUFRNSVpBRE8iIHwgdGVlIC1hIGxvZy1pbnN0YWxsLnR4dAplY2hvICIgICAtIEFkbWluIENvbnRyb2wiIHwgdGVlIC1hIGxvZy1pbnN0YWxsLnR4dAojZWNobyAiICAgLSBDaGFuZ2UgcG9ydCIgfCB0ZWUgLWEgbG9nLWluc3RhbGwudHh0CmVjaG8gIiAgIC0gRWxhYm9yYWRvIHBvcjogSmVycnlTQkciICB8IHRlZSAtYSBsb2ctaW5zdGFsbC50eHQKZWNobyAiICAgLSBXaGF0c2FwcDogKzUyOTI0MTI5MzMxMCIgfCB0ZWUgLWEgbG9nLWluc3RhbGwudHh0CmVjaG8gIiAgIC0gVGVsZWdyYW06IEBKZXJyeV9TQkciIHwgdGVlIC1hIGxvZy1pbnN0YWxsLnR4dAplY2hvICIiCmVjaG8gLWUgIiR7QklCbHVlfeKVsOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVryR7TkN9IgplY2hvICIiCmVjaG8gLWUgIiR7QklCbHVlfeKVreKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVriR7TkN9IgplY2hvIC1lICIke0JJQmx1ZX3ilIIke0JHQ09MT1J9ICAgIElOU1RBTEFDSU9OIERFTCBTQ1JJUFQgRklOQUxJWkFETy4uICAgICAke05DfSR7QklCbHVlfeKUgiR7TkN9IgplY2hvIC1lICIke0JJQmx1ZX3ilIIke0JHQ09MT1J9ICAgIFRVIFZQUyBTRSBSRUlOQ0lBUkEgRU4gMiBTRUdVTkRPUy4uICAgICAke05DfSR7QklCbHVlfeKUgiR7TkN9IgplY2hvIC1lICIke0JJQmx1ZX3ilbDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDila8ke05DfSIKZWNobyAgIiIKI2VjaG8gLWUgIlsgJHt5ZWxsfUFEVkVSVEVOQ0lBJHtOQ30gXSDCv1F1aWVyZXMgUmVpbmljaWFyIEFob3JhPyA/IChzL24pPyAiOyByZWFkIGFuc3dlcgojaWYgWyAiJGFuc3dlciIgPT0gIiR7YW5zd2VyI1tTc119IiBdIDt0aGVuCiNybSAvcm9vdC9sb2ctaW5zdGFsbC50eHQgPi9kZXYvbnVsbCAyPiYxCiNleGl0IDAKI2Vsc2UKc2xlZXAgNQojcm0gL3Jvb3QvbG9nLWluc3RhbGwudHh0ID4vZGV2L251bGwgMj4mMQpyZWJvb3QKI2Zp
B14CK-KN1GH7
source ${NFS}
rm -rf ${NFS}