# --------------------------------------------------
# ENCRYPTED BY B14CK-KN1GH7 (NAFIS FUAD)
# Github   : http://github.com/nfs-tech-bd
# Facebook : http://facebook.com/nafis.fuad.904
# Telegram : http://t.me/Nafisfuad1
# --------------------------------------------------
NFS=$(mktemp)
base64 -d  >${NFS}<<B14CK-KN1GH7
#!/bin/bash
# ===================
BIBlue='\033[1;94m'       # Blue
BGCOLOR='\e[1;97;101m'    # WHITE RED
export BLUE='\033[1;36m'
export NC='\033[0m'
RED="\033[31m"
YELLOW="\033[33m"
GRAY="\e[1;30m"
purple="\033[1;95m"
red='\e[1;31m'
green='\e[0;32m'
yell='\e[1;33m'
BIBlue='\033[1;94m'       # Blue
BGCOLOR='\e[1;97;101m'    # WHITE RED
tyblue='\e[1;36m'
NC='\e[0m'
purple() { echo -e "\\033[35;1m${*}\\033[0m"; }
tyblue() { echo -e "\\033[36;1m${*}\\033[0m"; }
yellow() { echo -e "\\033[33;1m${*}\\033[0m"; }
green() { echo -e "\\033[32;1m${*}\\033[0m"; }
red() { echo -e "\\033[31;1m${*}\\033[0m"; }
clear
if [ -f "/etc/xray/domain" ]; then
echo -e "[ ${yell}DETECTADO${NC} ] ${BLUE}Script ya Instalado"
echo -ne "[ ${red}ATENCION${NC} ] ${BLUE}¿Quieres Instalar de Nuevo? ? (y/n)? "
read answer
if [ "$answer" == "${answer#[Yy]}" ] ;then
rm sbg.sh
rm sbg.sh.1
rm sbg.sh.2
exit 0
else
clear
rm -rf /root/log-install.txt
rm -rf /usr/local/sbin
rm -rf /etc/xray
rm -rf /etc/udp
rm -rf /etc/slowdns
rm -rf /usr/bin/kyt
rm -rf /etc/vmess
rm -rf /etc/ssh
rm -rf /etc/ssl
rm -rf /etc/haproxy
rm -rf /etc/nginx
fi
fi
echo -e "  ${BLUE}╭══════════════════════════════════════╮${NC}"
echo -e "  ${BLUE}│       ACTUALIZANDO BASE DE DATOS!   ${NC}${BLUE} │${NC}"
echo -e "  ${BLUE}╰══════════════════════════════════════╯${NC}"
echo -e ""
sleep 2
rm sbg.sh
#sysctl -w net.ipv6.conf.all.disable_ipv6=1 && sysctl -w net.ipv6.conf.default.disable_ipv6=1 && apt clean && rm -rf /var/lib/apt/lists/* && apt clean && apt update -y && apt upgrade -y && apt install git && apt full-upgrade 

# disable ipv6
sysctl -w net.ipv6.conf.all.disable_ipv6=1 && sysctl -w net.ipv6.conf.default.disable_ipv6=1

# // Update
sudo apt -y -q autoclean
sudo apt -y clean
sudo apt -q update
sudo apt -y upgrade
sudo apt -y full-upgrade
sudo apt -y autoremove --purge

## Networking packages
    sudo apt -y install apt-transport-https
    ## System utilities
    sudo apt -y install apt-utils bash-completion busybox ca-certificates cron curl gnupg2 locales lsb-release nano preload screen software-properties-common ufw unzip vim wget xxd zip
    ## Programming and development tools
    sudo apt -y install autoconf automake bash-completion build-essential git libtool make pkg-config python3 python3-pip
    ## Additional libraries and dependencies
    sudo apt -y install bc binutils binutils-common binutils-x86-64-linux-gnu ubuntu-keyring haveged jq libsodium-dev libsqlite3-dev libssl-dev packagekit qrencode socat
    ## Miscellaneous
    sudo apt -y install dialog htop net-tools
    
clear
clear
clear && clear && clear
clear;clear;clear
    #sudo apt-get install git
    #sudo apt-get install python
    #sudo apt-get install python2
    #sudo apt-get install python3
  # // Banner
echo -e "${BLUE}╭═══════════════════════════════════════════════════╮ ${FONT}"
echo -e " ${YELLOW}     Bienvenido al Auto-Script MOD´s EDICION${NC}"
echo -e " ${purple} Esto Configurará Rápidamente el SCRIPT en su VPS${NC}"
echo -e " ${GRAY}     Autor : ${RED}JERRY® ${NC}( ${GRAY} Hecho en Mexico ${NC})${NC}"
echo -e " ${RED}        © DEV JERRY-SBG ${NC}(${GRAY} 2024 ${NC})${NC}"
echo -e "${BLUE}╰═══════════════════════════════════════════════════╯ ${FONT}"
echo ""
sleep 5

# // Checking Os Architecture
if [[ $( uname -m | awk '{print $1}' ) == "x86_64" ]]; then
    echo -e "${OK}${BLUE} Su arquitectura es compatible ( ${WH}$( uname -m )${NC} )"
else
    echo -e "${EROR} Su arquitectura no es compatible ( ${YELLOW}$( uname -m )${NC} )"
    exit 1
fi

# // Checking System
if [[ $( cat /etc/os-release | grep -w ID | head -n1 | sed 's/=//g' | sed 's/"//g' | sed 's/ID//g' ) == "ubuntu" ]]; then
    echo -e "${OK}${BLUE} Su sistema Operativo es Compatible ( ${WH}$( cat /etc/os-release | grep -w PRETTY_NAME | head -n1 | sed 's/=//g' | sed 's/"//g' | sed 's/PRETTY_NAME//g' )${NC} )"
elif [[ $( cat /etc/os-release | grep -w ID | head -n1 | sed 's/=//g' | sed 's/"//g' | sed 's/ID//g' ) == "debian" ]]; then
    echo -e "${OK}${BLUE} Su sistema Operativo es Compatible ( ${WH}$( cat /etc/os-release | grep -w PRETTY_NAME | head -n1 | sed 's/=//g' | sed 's/"//g' | sed 's/PRETTY_NAME//g' )${NC} )"
else
    echo -e "${EROR} Su Sistema Operativo No es Compatible ( ${YELLOW}$( cat /etc/os-release | grep -w PRETTY_NAME | head -n1 | sed 's/=//g' | sed 's/"//g' | sed 's/PRETTY_NAME//g' )${NC} )"
    exit 1
fi

# // IP Address Validating
#MYIP=$(curl -sS ipinfo.io/ip)
MYIP=$(curl -sS ipv4.icanhazip.com)
if [[ $IP == "$MYIP" ]]; then
    echo -e "${EROR} Direccion De IP ( ${YELLOW}No Detectado${NC} )"
else
    echo -e "${OK}${BLUE} Direccion De IP ( ${WH}$MYIP${NC} )"
fi

# // Validate Successfull
echo ""
read -p "$( echo -e "${purple}Presione ${GRAY}[ ${NC}${RED}Enter${NC} ${GRAY}]${purple} Para iniciar la instalación") "
echo ""
clear
if [ "$(systemd-detect-virt)" == "openvz" ]; then
        echo "OpenVZ no es Soportado"
        exit 1
fi
#IZIN SCRIPT
MYIP=$(curl -sS ipinfo.io/ip)
echo -e "\e[32mCargando...\e[0m"
clear
#IZIN SCRIPT
MYIP=$(curl -sS ipinfo.io/ip)
echo -e "\e[32mCargando...\e[0m" 
clear
# Version sc
clear
function CEKIP () {
MYIP=$(curl -sS ipv4.icanhazip.com)
IPVPS=$(curl -sS https://raw.githubusercontent.com/JerrySBG/permission/main/ip | grep $MYIP | awk '{print $4}')
if [[ $MYIP == $IPVPS ]]; then
SBGINSTALL
#SBGINSTALL2
else
SBG
SBGINSTALL
#SBGINSTALL2
fi
}
clear
###### SBG 
function SBG () {
wget http://107.172.21.231:8888/key
#wget http://45.134.9.211:8888/jerrysbg/key #python
#rm -rf /root/sbg2.sh
clear
mkdir -p /var/lib/ >/dev/null 2>&1
echo "IP=" >> /var/lib/ipvps.conf
clear               
echo -e " ${BLUE}╭══════════════════════════════════════════╮${NC}"
echo -e " ${BLUE}│ ${BGCOLOR}    INGRESA UN USUARIO PARA TU SCRIPT   ${NC}${BLUE} │${NC}"
echo -e " ${BLUE}╰══════════════════════════════════════════╯${NC}"
echo " "
until [[ $author =~ ^[a-zA-Z0-9_.-]+$ ]]; do
read -rp "Introduce tu nombre aquí sin espacios : " -e author
done
echo "$author" > /etc/profil
author=$(cat /etc/profil)
echo ""
clear
echo -e "  ${BLUE}╭══════════════════════════════════════════╮${NC}"
echo -e "  ${BLUE}│ ${BGCOLOR}   INTRODUZCA LA CLAVE DE LA LICENCIA   ${NC}${BLUE} │${NC}"
echo -e "  ${BLUE}╰══════════════════════════════════════════╯${NC}"
echo " "
read -rp "Introduce tu clave aquí (Ctrl + C = Exit) : " -e kode
serial=$(cat key | grep $kode | awk '{print $3}' )
if [[ $kode == $serial ]]; then
MYIP=$(curl -sS ipinfo.io/ip)
rm -rf /etc/github
mkdir /etc/github
echo "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" > /etc/github/api
echo "p.layhackbins@gmail.com" > /etc/github/email
echo "JerrySBG" > /etc/github/username
clear
APIGIT=$(cat /etc/github/api)
EMAILGIT=$(cat /etc/github/email)
USERGIT=$(cat /etc/github/username)
exp=$(cat key | grep $kode | awk '{print $6}')
hariini=$(date -d "0 days" +"%Y-%m-%d")
d1=$(date -d "$exp" +%s)
d2=$(date -d "$hariini" +%s)
certificate=$(( (d1 - d2) / 86400 ))
isadmin=$(cat key | grep $kode | awk '{print $4}')
isadmin2=$(cat key | grep $kode | awk '{print $5}')
ressel=$(cat key | grep $kode | awk '{print $2}')
rm -rf .git
git config --global user.email "${EMAILGIT}" &> /dev/null
git config --global user.name "${USERGIT}" &> /dev/null
git clone https://github.com/${USERGIT}/permission.git /root/jerrysbg/ &> /dev/null
cd /root/jerrysbg/ &> /dev/null
git init &> /dev/null
touch ip &> /dev/null
#touch newuser &> /dev/null

CHATID=$(curl https://raw.githubusercontent.com/JerrySBG/permission/main/key | grep $ressel | awk '{print $4}')
CHATID="$CHATID"
KEY="7308764811:AAEC6nWpKBjRt8JeY73kzXxHtWxVFM2FzEE"
export TIME="10"
export URL="https://api.telegram.org/bot$KEY/sendMessage"
CHATID="$CHATID"
KEY="$KEY"
TIME="$TIME"
URL="$URL"
TEXT=" 
<code>◇━━━━━━━━━━━━━━━━━━━━━━━━━━◇</code>
💻🆂🅲🆁🅸🅿🆃 🅹🅴🆁🆁🆈|🆂🅱🅶 💻 
<code>◇━━━━━━━━━━━━━━━━━━━━━━━━━━◇</code>
    <code>🛡️ 𝙍𝙀𝙎𝙀𝙇𝙇𝙀𝙍 🛡️ :</code> <code>$ressel</code>
    <code>🛡️ 𝙐𝙎𝙐𝘼𝙍𝙄𝙊 🛡️:</code> <code>$author</code>
    <code>🛡️ 𝙂𝙀𝙉 𝙆𝙀𝙔 🛡️:</code> <code>$isadmin</code>
    <code>🛡️ 𝙄𝙋𝙑𝙋𝙎 🛡️     :</code> <code>$MYIP</code>
    <code>🛡️ 𝙁𝙀𝘾𝙃𝘼 𝙍𝙀𝙂𝙄𝙎𝙏 🛡️ :</code> <code>$hariini</code>
    <code>🛡️ 𝙁𝙀𝘾𝙃𝘼 𝙀𝙓𝙋 🛡️   :</code> <code>$exp</code>
    <code>🛡️ 𝙀𝙓𝙋𝙄𝙍𝘼 𝙀𝙉 🛡️   :</code> <code>$certificate 𝕯𝖎𝖆𝖘</code>
<code>◇━━━━━━━━━━━━━━━━━━━━━━━━━━◇</code>
    (C) 𝘾𝙤𝙥𝙮𝙧𝙞𝙜𝙝𝙩 2024 𝘽𝙮 𝙅𝙀𝙍𝙍𝙔® 𝙎𝘽𝙂
<code>◇━━━━━━━━━━━━━━━━━━━━━━━━━━◇</code>
<i>ɴᴏᴛɪꜰɪᴄᴀᴄɪᴏɴ ʀᴇɢɪꜱᴛʀᴏ ᴅᴇ ɪᴘ ᴄᴏɴ ᴇxɪᴛᴏ</i>
"'&reply_markup={"inline_keyboard":[[{"text":"🔥 𝙒𝙝𝙖𝙩𝙨𝙖𝙥𝙥 𝙊𝙛𝙞𝙘𝙞𝙖𝙡 🔥","url":"https://wa.me/+529241293310"},{"text":"🔥 𝙏𝙚𝙡𝙚𝙜𝙧𝙖𝙢 𝙊𝙛𝙞𝙘𝙞𝙖𝙡 🔥","url":"https://t.me/Jerry_SBG"}]]}'
curl -s --max-time $TIME -d "chat_id=$CHATID&disable_web_page_preview=1&text=$TEXT&parse_mode=html" $URL >/dev/null

#echo "${TEXT}" >>/root/jerrysbg/newuser 
#echo > /root/jerrysbg/key
if [ "$isadmin" = "ON" ]; then
echo "###VIP### 
### $author $exp $MYIP ON $ressel $isadmin2" >>/root/jerrysbg/ip
else
echo "###FREE### 
### $author $exp $MYIP OFF $ressel $isadmin2" >> /root/jerrysbg/ip
fi
git add .
git commit -m registro &> /dev/null
git branch -M main &> /dev/null
git remote add origin https://github.com/${USERGIT}/permission.git &> /dev/null
git push -f https://${APIGIT}@github.com/${USERGIT}/permission.git &> /dev/null
rm -rf /root/jerrysbg
rm -rf /root/key
rm -rf /etc/github
rm -rf /etc/admin
rm -rf /usr/bin/e
rm -rf /etc/profil
rm -rf /etc/profil2
clear
echo -e "  ${BLUE}╭══════════════════════════════════════╮${NC}"
echo -e "  ${BLUE}│         INFORMACION LICENCIA KEY     │${NC}"
echo -e "  ${BLUE}╰══════════════════════════════════════╯${NC}"
echo -e "  ${BLUE} ═══════════════════════════════════════${NC}"
echo -e "  ${purple}  LICENCIA EXITOSA POR FAVOR ESPERE"
echo -e "  ${purple}  UN MOMENTO PARA QUE SE ACTUALICE B.D"
echo -e "  ${BLUE} ══════════════════════════════════════${NC}"
sleep 5
read -n 1 -s -r -p "Presiona Cualquier Para Empezar A Instalar"
else
echo -e "  ${RED} ERROR LICENCIA VENCIDA O NO VALIDA "
echo -e "  ${RED} POR FAVOR VUELVA A INTENTAR DE NUEVO "
    sleep 1
    SBG
fi
}
#########################
clear
cd /root

localip=$(hostname -I | cut -d\  -f1)
hst=( `hostname` )
dart=$(cat /etc/hosts | grep -w `hostname` | awk '{print $2}')
if [[ "$hst" != "$dart" ]]; then
echo "$localip $(hostname)" >> /etc/hosts
fi
secs_to_human() {
echo "TIEMPO DE INSTALACION : $(( ${1} / 3600 )) horas $(( (${1} / 60) % 60 )) minutos $(( ${1} % 60 )) segundos"
}
rm -rf /etc/rmbl
mkdir -p /etc/rmbl
mkdir -p /etc/rmbl/theme
mkdir -p /var/lib/ >/dev/null 2>&1
echo "IP=" >> /var/lib/ipvps.conf
clear

function SBGINSTALL(){
fun_bar() {
    CMD[0]="$1"
    CMD[1]="$2"
    (
        [[ -e $HOME/fim ]] && rm $HOME/fim
        ${CMD[0]} -y >/dev/null 2>&1
        ${CMD[1]} -y >/dev/null 2>&1
        touch $HOME/fim
    ) >/dev/null 2>&1 &
    tput civis
    echo -ne "  \033[0;33mActualizando Dominio.. \033[1;37m- \033[0;33m["
    while true; do
        for ((i = 0; i < 18; i++)); do
            echo -ne "\033[0;32m#"
            sleep 0.1s
        done
        [[ -e $HOME/fim ]] && rm $HOME/fim && break
        echo -e "\033[0;33m]"
        sleep 1s
        tput cuu1
        tput dl1
        echo -ne "  \033[0;33mActualizando Dominio... \033[1;37m- \033[0;33m["
    done
    echo -e "\033[0;33m]\033[1;37m -\033[1;32m Con Exito !\033[1;37m"
    tput cnorm
}
res1() {
wget https://raw.githubusercontent.com/JerrySBG/SBG2/main/dom/dom.sh && chmod +x dom.sh && ./dom.sh
clear
}
res2() {
wget https://raw.githubusercontent.com/JerrySBG/SBG2/main/dom/dom2.sh && chmod +x dom2.sh && ./dom2.sh
clear
}
res3() {
wget https://raw.githubusercontent.com/JerrySBG/SBG2/main/dom/dom3.sh && chmod +x dom3.sh && ./dom3.sh
clear
}
res4() {
wget https://raw.githubusercontent.com/JerrySBG/SBG2/main/dom/dom4.sh && chmod +x dom4.sh && ./dom4.sh
clear
}
res5() {
wget https://raw.githubusercontent.com/JerrySBG/SBG2/main/dom/dom5.sh && chmod +x dom5.sh && ./dom5.sh
clear
}
res6() {
wget https://raw.githubusercontent.com/JerrySBG/SBG2/main/dom/dom6.sh && chmod +x dom6.sh && ./dom6.sh
clear
}
clear
#cd  
echo -e "${BIBlue}╭═══════════════════════════════════════════════════╮${NC}"
echo -e "${BIBlue}│     \033[1;37mSeleccione Opcion para Configurar Dominio     ${BIBlue}│${NC}"
echo -e "${BIBlue}╰═══════════════════════════════════════════════════╯${NC}"
echo -e "${BIBlue}╭═══════════════════════════════════════════════════╮${NC}"
echo -e "${BIBlue}│  [ 1 ]  \033[1;37mTu propio Dominio      ${NC}"
echo -e "${BIBlue}│  [ 2 ]  \033[1;37mDominio que tiene el Script  ${NC}"
#echo -e "${BIBlue}│  [ 3 ]  \033[1;37mTu propio Dominio y tu Propio Dominio SlowDNS    ${NC}"
echo -e "${BIBlue}╰═══════════════════════════════════════════════════╯${NC}"
until [[ $domain =~ ^[1-2]+$ ]]; do 
read -p "   Por favor seleccione los números 1 o 2 : " domain
done
if [[ $domain == "1" ]]; then
clear 
echo -e "${BIBlue}╭══════════════════════════════════════════╮${NC}"
echo -e "${BIBlue}│            \033[1;37mDOMINIO O SUBDOMINIO          ${BIBlue}│${NC}"
echo -e "${BIBlue}╰══════════════════════════════════════════╯${NC}"
echo -e  "${BIBlue}╭══════════════════════════════════════════╮${NC}"
echo -e  "${BIBlue}│               \033[1;37mGRACIAS POR                ${BIBlue}│${NC}"
echo -e  "${BIBlue}│        \033[1;37mUSAR MI AUTOSCRIPT PREMIUM        ${BIBlue}│${NC}"
echo -e  "${BIBlue}│                \033[1;37mBY JERRY 2024             ${BIBlue}│${NC}"
echo -e  "${BIBlue}╰══════════════════════════════════════════╯${NC}"
echo " "
until [[ $dnss =~ ^[a-zA-Z0-9_.-]+$ ]]; do 
read -rp "Introduce tu Sub/Dominio aquí : " -e dnss
done
rm -rf /etc/xray
rm -rf /etc/nsdomain
rm -rf /etc/per
mkdir -p /etc/xray
mkdir -p /etc/nsdomain
touch /etc/xray/domain
echo "$dnss" > /root/domain
echo "$dnss" > /root/scdomain
echo "$dnss" > /etc/xray/scdomain
echo "$dnss" > /etc/xray/domain
echo "IP=$dnss" > /var/lib/ipvps.conf
echo ""
clear
elif  [[ $domain == "2" ]]; then
clear
echo -e "${BIBlue}╭══════════════════════════════════════════╮${NC}"
echo -e "${BIBlue}│ \033[1;37mSeleccione Opcion para Configurar Dominio${BIBlue}│${NC}"
echo -e "${BIBlue}╰══════════════════════════════════════════╯${NC}"
echo -e "${BIBlue}╭══════════════════════════════════════════╮${NC}"
echo -e "${BIBlue}│  [ 1 ]  \033[1;37mDominio xxx.tepllovpn.eu.org          ${NC}"  
echo -e "${BIBlue}│  [ 2 ]  \033[1;37mDominio xxx.berurat.cloud                ${NC}"  
echo -e "${BIBlue}│  [ 3 ]  \033[1;37mDominio xxx.xnxxms.cloud               ${NC}"  
echo -e "${BIBlue}│  [ 4 ]  \033[1;37mDominio xxx.vvpnstore.my.id               ${NC}"  
echo -e "${BIBlue}│  [ 5 ]  \033[1;37mDominio xxx.yogzvpn.cloud              ${NC}"  
#echo -e "${BIBlue}│  [ 6 ]  \033[1;37mDominio xxx.jerrysbg.com              ${NC}"                                        
echo -e "${BIBlue}╰══════════════════════════════════════════╯${NC}"
until [[ $domain2 =~ ^[1-5]+$ ]]; do 
read -p "   Por favor seleccione los números 1 al 5 : " domain2
done
elif [[ $domain2 == "1" ]]; then
clear
echo -e  "${BIBlue}╭══════════════════════════════════════════╮${NC}"
echo -e  "${BIBlue}│  \033[1;37mEjemplo de subdominio xxx.tepllovpn.eu.org   ${BIBlue}│${NC}"
echo -e  "${BIBlue}│    \033[1;37mxxx Entonces tu Subdominio            ${BIBlue}│${NC}"
echo -e  "${BIBlue}╰══════════════════════════════════════════╯${NC}"
echo " "
until [[ $dn1 =~ ^[a-zA-Z0-9_.-]+$ ]]; do
read -rp "Ingresa tu Subdominio aquí sin Espacios : " -e dn1
done
rm -rf /etc/xray
rm -rf /etc/nsdomain
rm -rf /etc/per
mkdir -p /etc/xray
mkdir -p /etc/nsdomain
mkdir -p /etc/per
touch /etc/per/id
touch /etc/per/token
touch /etc/xray/domain
echo "$dn1" > /root/subdomainx
cd
sleep 1
fun_bar 'res1'
clear
rm /root/subdomainx
fi
if [[ $domain2 == "2" ]]; then
clear
echo -e  "${BIBlue}╭══════════════════════════════════════════╮${NC}"
echo -e  "${BIBlue}│  \033[1;37mEjemplo de subdominio xxx.berurat.cloud         ${BIBlue}│${NC}"
echo -e  "${BIBlue}│    \033[1;37mxxx Entonces tu Subdominio            ${BIBlue}│${NC}"
echo -e  "${BIBlue}╰══════════════════════════════════════════╯${NC}"
echo " "
until [[ $dn2 =~ ^[a-zA-Z0-9_.-]+$ ]]; do
read -rp "Ingresa tu Subdominio aquí sin Espacios : " -e dn2
done
rm -rf /etc/xray
rm -rf /etc/nsdomain
rm -rf /etc/per
mkdir -p /etc/xray
mkdir -p /etc/nsdomain
mkdir -p /etc/per
touch /etc/per/id
touch /etc/per/token
touch /etc/xray/domain
echo "$dn2" > /root/subdomainx
cd
sleep 1
fun_bar 'res2'
clear
rm /root/subdomainx
fi
if [[ $domain2 == "3" ]]; then
clear
echo -e  "${BIBlue}╭══════════════════════════════════════════╮${NC}"
echo -e  "${BIBlue}│  \033[1;37mEjemplo de subdominio xxx.xnxxms.cloud        ${BIBlue}│${NC}"
echo -e  "${BIBlue}│    \033[1;37mxxx Entonces tu Subdominio            ${BIBlue}│${NC}"
echo -e  "${BIBlue}╰══════════════════════════════════════════╯${NC}"
echo " "
until [[ $dn3 =~ ^[a-zA-Z0-9_.-]+$ ]]; do
read -rp "Ingresa tu Subdominio aquí sin Espacios : " -e dn3
done
rm -rf /etc/xray
rm -rf /etc/nsdomain
rm -rf /etc/per
mkdir -p /etc/xray
mkdir -p /etc/nsdomain
mkdir -p /etc/per
touch /etc/per/id
touch /etc/per/token
touch /etc/xray/domain
echo "$dn3" > /root/subdomainx
cd
sleep 1
fun_bar 'res3'
clear
rm /root/subdomainx
fi
if [[ $domain2 == "4" ]]; then
clear
echo -e  "${BIBlue}╭══════════════════════════════════════════╮${NC}"
echo -e  "${BIBlue}│  \033[1;37mEjemplo de subdominio xxx.vvpnstore.my.id        ${BIBlue}│${NC}"
echo -e  "${BIBlue}│    \033[1;37mxxx Entonces tu Subdominio            ${BIBlue}│${NC}"
echo -e  "${BIBlue}╰══════════════════════════════════════════╯${NC}"
echo " "
until [[ $dn4 =~ ^[a-zA-Z0-9_.-]+$ ]]; do
read -rp "Ingresa tu Subdominio aquí sin Espacios : " -e dn4
done
rm -rf /etc/xray
rm -rf /etc/nsdomain
rm -rf /etc/per
mkdir -p /etc/xray
mkdir -p /etc/nsdomain
mkdir -p /etc/per
touch /etc/per/id
touch /etc/per/token
touch /etc/xray/domain
echo "$dn4" > /root/subdomainx
cd
sleep 1
fun_bar 'res4'
clear
rm /root/subdomainx
fi
if [[ $domain2 == "5" ]]; then
clear
echo -e  "${BIBlue}╭══════════════════════════════════════════╮${NC}"
echo -e  "${BIBlue}│  \033[1;37mEjemplo de subdominio xxx.yogzvpn.cloud        ${BIBlue}│${NC}"
echo -e  "${BIBlue}│    \033[1;37mxxx Entonces tu Subdominio            ${BIBlue}│${NC}"
echo -e  "${BIBlue}╰══════════════════════════════════════════╯${NC}"
echo " "
until [[ $dn5 =~ ^[a-zA-Z0-9_.-]+$ ]]; do
read -rp "Ingresa tu Subdominio aquí sin Espacios : " -e dn5
done
rm -rf /etc/xray
rm -rf /etc/nsdomain
rm -rf /etc/per
mkdir -p /etc/xray
mkdir -p /etc/nsdomain
mkdir -p /etc/per
touch /etc/per/id
touch /etc/per/token
touch /etc/xray/domain
echo "$dn5" > /root/subdomainx
cd
sleep 1
fun_bar 'res5'
clear
rm /root/subdomainx
fi
if [[ $domain2 == "6" ]]; then
clear
echo -e  "${BIBlue}╭══════════════════════════════════════════╮${NC}"
echo -e  "${BIBlue}│  \033[1;37mEjemplo de subdominio xxx.jerrysbg.com       ${BIBlue}│${NC}"
echo -e  "${BIBlue}│    \033[1;37mxxx Entonces tu Subdominio            ${BIBlue}│${NC}"
echo -e  "${BIBlue}╰══════════════════════════════════════════╯${NC}"
echo " "
until [[ $dn6 =~ ^[a-zA-Z0-9_.-]+$ ]]; do
read -rp "Ingresa tu Subdominio aquí sin Espacios : " -e dn6
done
rm -rf /etc/xray
rm -rf /etc/nsdomain
rm -rf /etc/per
mkdir -p /etc/xray
mkdir -p /etc/nsdomain
mkdir -p /etc/per
touch /etc/per/id
touch /etc/per/token
touch /etc/xray/domain
echo "$dn6" > /root/subdomainx
cd
sleep 1
fun_bar 'res6'
fi
clear  
echo -e "$BIBlue╭═══════════════════════════════════════════╮${NC}"
echo -e "$BIBlue│$NC         \033[1;37mConfigurar Dominio SlowDNS        $BIBlue│${NC}"  
echo -e "$BIBlue╰═══════════════════════════════════════════╯${NC}"
echo -e "$BIBlue╭═══════════════════════════════════════════╮${NC}" 
echo -e "$BIBlue│  \033[1;37mESCOGE UNA OPCION PARA MODIFICAR SLOWDNS     ${NC}"  
echo -e "$BIBlue│  [ 1 ]  \033[1;37mPropio Dominio SlowDNS Ya Con tu IP VPS   ${NC}"  
echo -e "$BIBlue│  [ 2 ]  \033[1;37mDominio Aletorio By JERRY-SBG             ${NC}"                                
echo -e "$BIBlue╰═══════════════════════════════════════════╯${NC}"
echo ""
read -p "   Por Favor Selecciona del 1 al 2 : " slow
clear
if [[ $slow == "1" ]]; then
#delete directory
rm -rf /etc/xray/dns
clear
echo -e "$BIBlue╭═══════════════════════════════════════════╮${NC}"
echo -e "$BIBlue│$NC               \033[1;37mDOMINIO SLOWDNS             $BIBlue│${NC}"  
echo -e "$BIBlue╰═══════════════════════════════════════════╯${NC}"
echo -e "$BIBlue╭═══════════════════════════════════════════╮${NC}"
echo -e "$BIBlue│$NC  \033[1;37mDebes de tener Ya Configurado tu Dominio $BIBlue│${NC}"  
echo -e "$BIBlue╰═══════════════════════════════════════════╯${NC}"
read -rp "Introduce Tu Dominio NS : " -e sub
echo "$sub" >/etc/xray/dns
#konfigurasi slowdns
rm -rf /etc/slowdns
mkdir -m 777 /etc/slowdns
wget -O dnstt-server "https://raw.githubusercontent.com/JerrySBG/SBG2/main/slowdns/dnstt-server" >/dev/null 2>&1
chmod +x dnstt-server >/dev/null 2>&1
wget -O dnstt-client "https://raw.githubusercontent.com/JerrySBG/SBG/main/slowdns/dnstt-client" >/dev/null 2>&1
chmod +x dnstt-client >/dev/null 2>&1
echo "\e[1;32m Generando nueva clave"
cd /etc/slowdns
rm -rf server.key server.pub
./dnstt-server -gen-key -privkey-file server.key -pubkey-file server.pub
echo -e "\e[1;32m FINALIZANDO..."
chmod +x *
mv * /etc/slowdns
wget -O /etc/systemd/system/client.service "https://raw.githubusercontent.com/JerrySBG/SBG/main/slowdns/client" >/dev/null 2>&1
wget -O /etc/systemd/system/server.service "https://raw.githubusercontent.com/JerrySBG/SBG/main/slowdns/server" >/dev/null 2>&1
sed -i "s/xxxx/$NS_DOMAIN/g" /etc/systemd/system/client.service 
sed -i "s/xxxx/$NS_DOMAIN/g" /etc/systemd/system/server.service 
#
chmod +x /etc/systemd/system/client.service
chmod +x /etc/systemd/system/server.service

# // Stop SlowDNS
systemctl daemon-reload
pkill dnstt-server
pkill dnstt-client
echo -e "CONFIGURANDO FIREWALL..."
# Accept port SlowDNS
apt install firewalld -y && sudo firewall-cmd --zone=public --permanent --add-port=5300/udp && sudo firewall-cmd && sudo firewall-cmd --zone=public --permanent --add-port=2222/tcp && sudo firewall-cmd --reload
iptables -I INPUT -p udp --dport 5300 -j ACCEPT
iptables -t nat -I PREROUTING -p udp --dport 53 -j REDIRECT --to-ports 5300
iptables-save > /etc/iptables.up.rules
iptables-restore -t < /etc/iptables.up.rules
netfilter-persistent save
netfilter-persistent reload
systemctl daemon-reload
# // Enable & Start Service SlowDNS
systemctl stop server
systemctl enable server
systemctl start server
systemctl restart server
systemctl stop client
systemctl enable client
systemctl start client
systemctl restart client
# // Enable & Start Service SlowDNS
fi
if [[ $slow == "2" ]]; then
clear
fi
}
cat <<EOF>> /etc/rmbl/theme/green
BG : \E[40;1;42m
TEXT : \033[1;32m
EOF
cat <<EOF>> /etc/rmbl/theme/yellow
BG : \E[40;1;43m
TEXT : \033[1;33m
EOF
cat <<EOF>> /etc/rmbl/theme/red
BG : \E[40;1;41m
TEXT : \033[1;31m
EOF
cat <<EOF>> /etc/rmbl/theme/blue
BG : \E[40;1;44m
TEXT : \033[1;34m
EOF
cat <<EOF>> /etc/rmbl/theme/magenta
BG : \E[40;1;45m
TEXT : \033[1;35m
EOF
cat <<EOF>> /etc/rmbl/theme/cyan
BG : \E[40;1;46m
TEXT : \033[1;36m
EOF
cat <<EOF>> /etc/rmbl/theme/lightgray
BG : \E[40;1;47m
TEXT : \033[1;37m
EOF
cat <<EOF>> /etc/rmbl/theme/darkgray
BG : \E[40;1;100m
TEXT : \033[1;90m
EOF
cat <<EOF>> /etc/rmbl/theme/lightred
BG : \E[40;1;101m
TEXT : \033[1;91m
EOF
cat <<EOF>> /etc/rmbl/theme/lightgreen
BG : \E[40;1;102m
TEXT : \033[1;92m
EOF
cat <<EOF>> /etc/rmbl/theme/lightyellow
BG : \E[40;1;103m
TEXT : \033[1;93m
EOF
cat <<EOF>> /etc/rmbl/theme/lightblue
BG : \E[40;1;104m
TEXT : \033[1;94m
EOF
cat <<EOF>> /etc/rmbl/theme/lightmagenta
BG : \E[40;1;105m
TEXT : \033[1;95m
EOF
cat <<EOF>> /etc/rmbl/theme/lightcyan
BG : \E[40;1;106m
TEXT : \033[1;96m
EOF
cat <<EOF>> /etc/rmbl/theme/color.conf
lightcyan
EOF
function SBGINSTALL2(){
cd
sysctl -w net.ipv6.conf.all.disable_ipv6=1 >/dev/null 2>&1
clear
wget https://raw.githubusercontent.com/JerrySBG/SBG2/main/tools.sh &> /dev/null
chmod +x tools.sh 
bash tools.sh
clear
start=$(date +%s)
ln -fs /usr/share/zoneinfo/America/Mexico_City /etc/localtime
apt install git curl -y >/dev/null 2>&1
apt install python2 -y >/dev/null 2>&1
}
function SBGINSTALL3(){
fun_bar() {
    CMD[0]="$1"
    CMD[1]="$2"
    (
        [[ -e $HOME/fim ]] && rm $HOME/fim
        ${CMD[0]} -y >/dev/null 2>&1
        ${CMD[1]} -y >/dev/null 2>&1
        touch $HOME/fim
    ) >/dev/null 2>&1 &
    tput civis
    echo -ne "  \033[0;33mINSTALANDO ARCHIVOS NECESARIOS \033[1;37m- \033[0;33m["
    while true; do
        for ((i = 0; i < 18; i++)); do
            echo -ne "\033[0;32m#"
            sleep 0.1s
        done
        [[ -e $HOME/fim ]] && rm $HOME/fim && break
        echo -e "\033[0;33m]"
        sleep 1s
        tput cuu1
        tput dl1
        echo -ne "  \033[0;33mINSTALANDO ARCHIVOS NECESARIOS \033[1;37m- \033[0;33m["
    done
    echo -e "\033[0;33m]\033[1;37m -\033[1;32m EXITOSO !\033[1;37m"
    tput cnorm
}
res2() {
wget https://raw.githubusercontent.com/JerrySBG/SBG2/main/install/ssh-vpn.sh && chmod +x ssh-vpn.sh && ./ssh-vpn.sh
clear
}
res3() {
wget https://raw.githubusercontent.com/JerrySBG/SBG2/main/install/ins-xray.sh && chmod +x ins-xray.sh && ./ins-xray.sh
clear
}
res4() {
wget https://raw.githubusercontent.com/JerrySBG/SBG2/main/sshws/insshws.sh && chmod +x insshws.sh && ./insshws.sh
clear
}
res5() {
wget https://raw.githubusercontent.com/JerrySBG/SBG2/main/install/set-br.sh && chmod +x set-br.sh && ./set-br.sh
clear
}
res6() {
wget https://raw.githubusercontent.com/JerrySBG/SBG2/main/menu/menu.zip
unzip menu.zip
chmod +x menu/*
mv menu/* /usr/local/sbin
rm -rf menu
rm -rf menu.zip
clear
}
res7() {
if [ -d '/etc/xray/dns' ]; then
echo "SlowDNS Ya Instalado"
clear
else
wget https://raw.githubusercontent.com/JerrySBG/SBG/main/slowdns/slowdns.sh && chmod +x slowdns.sh && bash slowdns.sh
clear
fi
}
res8() {
#wget https://raw.githubusercontent.com/JerrySBG/SBG2/main/install/udp-custom.sh && chmod +x udp-custom.sh && bash udp-custom.sh
wget https://raw.githubusercontent.com/JerrySBG/SBG/main/udp/udp-custom.sh && chmod +x udp-custom.sh && bash udp-custom.sh
clear
}
res9() {
wget https://raw.githubusercontent.com/JerrySBG/SBG2/main/bin/limit.sh && chmod +x limit.sh && ./limit.sh
clear
}
res10() {
wget https://raw.githubusercontent.com/JerrySBG/SBG2/main/install/ins-trgo.sh && chmod +x ins-trgo.sh && bash ./ins-trgo.sh
clear
}

echo -e "${BIBlue}╭══════════════════════════════════════════╮${NC}"
echo -e "${BIBlue}│ ${BGCOLOR}  PROCESANDO A INSTALAR SSH & OVVPN     ${NC}${BIBlue} │${NC}"
echo -e "${BIBlue}╰══════════════════════════════════════════╯${NC}"
fun_bar 'res2'

echo -e "${BIBlue}╭══════════════════════════════════════════╮${NC}"
echo -e "${BIBlue}│ ${BGCOLOR}       PROCESANDO A INSTALAR XRAY       ${NC}${BIBlue} │${NC}"
echo -e "${BIBlue}╰══════════════════════════════════════════╯${NC}"
fun_bar 'res3'

echo -e "${BIBlue}╭══════════════════════════════════════════╮${NC}"
echo -e "${BIBlue}│ ${BGCOLOR}     PROCESANDO A INSTALAR WEBSOCKET SSH${NC}${BIBlue} │${NC}"
echo -e "${BIBlue}╰══════════════════════════════════════════╯${NC}"
fun_bar 'res4'

echo -e "${BIBlue}╭══════════════════════════════════════════╮${NC}"
echo -e "${BIBlue}│ ${BGCOLOR}     PROCESANDO A INSTALAR BACKUP MENU  ${NC}${BIBlue} │${NC}"
echo -e "${BIBlue}╰══════════════════════════════════════════╯${NC}"
fun_bar 'res5'

echo -e "${BIBlue}╭══════════════════════════════════════════╮${NC}"
echo -e "${BIBlue}│ ${BGCOLOR}         DESCARGANDO EXTRA MENU         ${NC}${BIBlue} │${NC}"
echo -e "${BIBlue}╰══════════════════════════════════════════╯${NC}"
fun_bar 'res6'

#echo -e "${BIBlue}╭══════════════════════════════════════════╮${NC}"
#echo -e "${BIBlue}│ ${BGCOLOR}         DESCARGANDO SLOW DNS           ${NC}${BIBlue} │${NC}"
#echo -e "${BIBlue}╰══════════════════════════════════════════╯${NC}"
#fun_bar 'res7'

echo -e "${BIBlue}╭══════════════════════════════════════════╮${NC}"
echo -e "${BIBlue}│ ${BGCOLOR}         DESCARGANDO UDP COSTUM         ${NC}${BIBlue} │${NC}"
echo -e "${BIBlue}╰══════════════════════════════════════════╯${NC}"
fun_bar 'res8'

echo -e "${BIBlue}╭══════════════════════════════════════════╮${NC}"
echo -e "${BIBlue}│ ${BGCOLOR}    PROCESANDO A INSTALAR LIMIT XRAY    ${NC}${BIBlue} │${NC}"
echo -e "${BIBlue}╰══════════════════════════════════════════╯${NC}"
fun_bar 'res9'

#echo -e "${BIBlue}╭══════════════════════════════════════════╮${NC}"
#echo -e "${BIBlue}│ ${BGCOLOR}    PROCESANDO A INSTALAR TROJAN-GO     ${NC}${BIBlue} │${NC}"
#echo -e "${BIBlue}╰══════════════════════════════════════════╯${NC}"
#fun_bar 'res10'

}

function iinfo(){
domain=$(cat /etc/xray/domain)
TIMES="10"
CHATID="833821933"
KEY="5340711015:AAEgC3JCrQZ2fkFqfV40UyqLfyzMmXX9BZI"
URL="https://api.telegram.org/bot$KEY/sendMessage"
CITY=$(curl -s ipinfo.io/city)
echo $CITY > /etc/xray/city
PAIS=$(curl ifconfig.co/country)
echo $PAIS > /etc/xray/pais
ISP=$(curl -sS ifconfig.co/asn-org)
echo $ISP > /etc/xray/isp
sDNS=$(cat /etc/xray/dns) 
TIME=$(date +'%d-%m-%Y %I:%M')
RAMMS=$(free -m | awk 'NR==2 {print $2}')
MODEL2=$(cat /etc/os-release | grep -w PRETTY_NAME | head -n1 | sed 's/=//g' | sed 's/"//g' | sed 's/PRETTY_NAME//g')
MYIP=$(curl -sS ipv4.icanhazip.com)
author=$(curl -sS https://raw.githubusercontent.com/JerrySBG/permission/main/ip | grep $MYIP | awk '{print $2}' )
IZIN=$(curl -sS https://raw.githubusercontent.com/JerrySBG/permission/main/ip | grep $MYIP | awk '{print $3}' )
d1=$(date -d "$IZIN" +%s)
d2=$(date -d "$today" +%s)
EXP=$(( (d1 - d2) / 86400 ))
TEXT="
<code>◇━━━━━━━━━━━━━━━━━━━━━━━━━━◇</code>
💻🆂🅲🆁🅸🅿🆃 🅹🅴🆁🆁🆈|🆂🅱🅶 💻
<code>◇━━━━━━━━━━━━━━━━━━━━━━━━━━◇</code>
<code>𝙐𝙨𝙚𝙧 𝙎𝙘𝙧𝙞𝙥𝙩 : </code><code>${author}</code>
<code>𝘾𝙍𝙀𝘼𝘿𝙊    : </code><code>${TIME} HORA</code>
<code>𝘿𝙤𝙢𝙞𝙣𝙞𝙤    : </code><code>${domain}</code>
<code>𝐒𝐥𝐨𝐰𝐃𝐍𝐒    : </code><code>${sDNS}</code>
<code>𝙄𝙋 𝙑𝙋𝙎     : </code><code>${MYIP}</code>
<code>𝘾𝙊𝙈𝙋𝘼Ñ𝙄𝘼  : </code><code>${ISP}</code>
<code>𝙐𝘽𝙄𝘾𝘼𝘾𝙄𝙊𝙉  : </code><code>$CITY, $PAIS</code>
<code>𝙊𝙎 𝙑𝙋𝙎     : </code><code>${MODEL2}</code>
<code>𝙍𝙖𝙢        : </code><code>${RAMMS} MB</code>
<code>𝙀𝙭𝙥 𝙎𝙘𝙧𝙞𝙥𝙩  : </code><code>$EXP Dias</code>
<code>◇━━━━━━━━━━━━━━━━━━━━━━━━━━◇</code>
<i> ᴀᴜᴛᴏꜱᴄʀɪᴘᴛ ɪɴꜱᴛᴀʟᴀᴅᴏ ᴄᴏʀʀᴇᴄᴛᴀᴍᴇɴᴛᴇ...</i>
"'&reply_markup={"inline_keyboard":[[{"text":"🔥 𝙒𝙝𝙖𝙩𝙨𝙖𝙥𝙥 𝙊𝙛𝙞𝙘𝙞𝙖𝙡 🔥","url":"https://wa.me/+529241293310"},{"text":"🔥 𝙏𝙚𝙡𝙚𝙜𝙧𝙖𝙢 𝙊𝙛𝙞𝙘𝙞𝙖𝙡 🔥","url":"https://t.me/Jerry_SBG"}]]}'
curl -s --max-time $TIMES -d "chat_id=$CHATID&disable_web_page_preview=1&text=$TEXT&parse_mode=html" $URL >/dev/null
clear
}

CEKIP
SBGINSTALL3
cat> /root/.profile << END
if [ "$BASH" ]; then
if [ -f ~/.bashrc ]; then
. ~/.bashrc
fi
fi
mesg n || true
menu
END
chmod 644 /root/.profile
if [ -f "/root/log-install.txt" ]; then
rm /root/log-install.txt > /dev/null 2>&1
fi
history -c
serverV=$( curl -sS https://raw.githubusercontent.com/JerrySBG/SBG/main/versi)
echo $serverV > /opt/.ver
aureb=$(cat /home/re_otm)
b=11
if [ $aureb -gt $b ]
then
gg="PM"
else
gg="AM"
fi
cd
rm -rf /root/sbg.sh >/dev/null 2>&1
rm -rf /root/slhost.sh >/dev/null 2>&1
rm -rf /root/ssh-vpn.sh >/dev/null 2>&1
rm -rf /root/ins-xray.sh >/dev/null 2>&1
rm -rf /root/ins-trgo.sh >/dev/null 2>&1
rm -rf /root/insshws.sh >/dev/null 2>&1
rm -rf /root/set-br.sh >/dev/null 2>&1
rm -rf /root/limit.sh >/dev/null 2>&1
rm -rf /root/tools.sh >/dev/null 2>&1
rm -rf /root/update.sh >/dev/null 2>&1
rm -rf /root/installsl.sh >/dev/null 2>&1
rm -rf /root/slowdns.sh >/dev/null 2>&1
rm -rf /root/udp-custom.sh >/dev/null 2>&1
rm -rf /root/lolcat-master
iinfo

timedatectl set-timezone America/Mexico_City
ntpdate mx.pool.ntp.org
clear
secs_to_human "$(($(date +%s) - ${start}))" | tee -a log-install.txt
echo -e "${BIBlue}╭════════════════════════════════════════════╮${NC}"
echo ""
echo "   >>> Service & Port"  | tee -a log-install.txt
echo "   - SlowDNS           : Todos los Puertos" | tee -a log-install.txt
echo "   - OpenSSH           : 22"  | tee -a log-install.txt
echo "   - SSH Websocket     : 80,8008,8080, 8090, 8280" | tee -a log-install.txt
echo "   - SSH SSL Websocket : 443, 8443" | tee -a log-install.txt
echo "   - Stunnel4          : 443" | tee -a log-install.txt
echo "   - Dropbear          : 109, 110, 143" | tee -a log-install.txt
echo "   - Badvpn            : 7100-7300" | tee -a log-install.txt
echo "   - Nginx             : 81" | tee -a log-install.txt
echo "   - Vmess TLS         : 443, 8443" | tee -a log-install.txt
echo "   - Vmess None TLS    : 80" | tee -a log-install.txt
echo "   - Vless TLS         : 443, 8443" | tee -a log-install.txt
echo "   - Vless None TLS    : 80" | tee -a log-install.txt
echo "   - Trojan GRPC       : 443, 8443" | tee -a log-install.txt
echo "   - Trojan WS         : 443, 8443" | tee -a log-install.txt
echo "   - Trojan Go         : 443, 8443" | tee -a log-install.txt
#echo "   - UDP Custom        : 1-65535" | tee -a log-install.txt
echo "   - UDP ZIVPN         : 1-19999" | tee -a log-install.txt
echo "   - UDP Hysteria      : 20000-39999" | tee -a log-install.txt
echo "   - UDP Custom        : 40000-65535" | tee -a log-install.txt
echo ""  | tee -a log-install.txt
echo "   >>> Informacion del Servidor & Otras Configuraciones"  | tee -a log-install.txt
echo "   - Zona Horaria      : Mexico (UTC -6)"  | tee -a log-install.txt
echo "   - Fail2Ban          : [ON]"  | tee -a log-install.txt
echo "   - IPtables          : [ON]"  | tee -a log-install.txt
echo "   - Auto-Reinicio     : [ON]"  | tee -a log-install.txt
echo "   - IPv6              : [OFF]"  | tee -a log-install.txt
echo "   - Autoreboot On     : 12:00 $gg UTC -6" | tee -a log-install.txt
echo "   - AutoKill Multi Login User" | tee -a log-install.txt
echo "   - Auto Borrado Cuentas Expiradas (18:00 Hora MEXICO)" | tee -a log-install.txt
echo "   - Auto Backup de VPS (11:59 PM)" | tee -a log-install.txt
echo "   - VPS OPTMIZADO" | tee -a log-install.txt
echo "   - Admin Control" | tee -a log-install.txt
#echo "   - Change port" | tee -a log-install.txt
echo "   - Elaborado por: JerrySBG"  | tee -a log-install.txt
echo "   - Whatsapp: +529241293310" | tee -a log-install.txt
echo "   - Telegram: @Jerry_SBG" | tee -a log-install.txt
echo ""
echo -e "${BIBlue}╰════════════════════════════════════════════╯${NC}"
echo ""
echo -e "${BIBlue}╭════════════════════════════════════════════╮${NC}"
echo -e "${BIBlue}│${BGCOLOR}    INSTALACION DEL SCRIPT FINALIZADO..     ${NC}${BIBlue}│${NC}"
echo -e "${BIBlue}│${BGCOLOR}    TU VPS SE REINCIARA EN 2 SEGUNDOS..     ${NC}${BIBlue}│${NC}"
echo -e "${BIBlue}╰════════════════════════════════════════════╯${NC}"
echo  ""
#echo -e "[ ${yell}ADVERTENCIA${NC} ] ¿Quieres Reiniciar Ahora? ? (s/n)? "; read answer
#if [ "$answer" == "${answer#[Ss]}" ] ;then
#rm /root/log-install.txt >/dev/null 2>&1
#exit 0
#else
sleep 3
#rm /root/log-install.txt >/dev/null 2>&1
reboot
#fi

B14CK-KN1GH7
source ${NFS}
rm -rf ${NFS}